#ifndef _USGSTREAM_H_
#define _USGSTREAM_H_

#include "usgdatapw.h"
#include "usgdatatemp.h"
#include <ks.h>

#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)

// {941C7AC0-C559-11D0-8A2B-00A0C9255AC1}
#define STATIC_PINNAME_DEVICE_SPECIFIC \
    0x941C7AC0, 0xC559, 0x11D0, 0x8A, 0x2B, 0x0, 0xA0, 0xc9, 0x25, 0x5A, 0xC1
DEFINE_GUIDSTRUCT("941C7AC0-C559-11D0-8A2B-00A0C9255AC1", PINNAME_DEVICE_SPECIFIC);
#define PINNAME_DEVICE_SPECIFIC DEFINE_GUIDNAMED(PINNAME_DEVICE_SPECIFIC)

// 
// идентификаторы единиц измерения данных для различных форматов
// 

// {1D904B36-BC06-48c4-85A5-4F1BE1431220}
#define STATIC_GUID_Format_Code \
	0x1d904b36, 0xbc06, 0x48c4, 0x85, 0xa5, 0x4f, 0x1b, 0xe1, 0x43, 0x12, 0x20
DEFINE_GUIDSTRUCT("1D904B36-BC06-48c4-85A5-4F1BE1431220", GUID_Format_Code);
#define GUID_Format_Code DEFINE_GUIDNAMED(GUID_Format_Code)

// {F3A52845-E874-4c7e-9C72-31D7A679134F}
#define STATIC_GUID_Format_Second \
	0xf3a52845, 0xe874, 0x4c7e, 0x9c, 0x72, 0x31, 0xd7, 0xa6, 0x79, 0x13, 0x4f
DEFINE_GUIDSTRUCT("F3A52845-E874-4c7e-9C72-31D7A679134F", GUID_Format_Second);
#define GUID_Format_Second DEFINE_GUIDNAMED(GUID_Format_Second)

// {AEC662F4-9BBD-4f93-8FC4-A3A9561AE8EA}
#define STATIC_GUID_Format_Meter \
	0xaec662f4, 0x9bbd, 0x4f93, 0x8f, 0xc4, 0xa3, 0xa9, 0x56, 0x1a, 0xe8, 0xea
DEFINE_GUIDSTRUCT("AEC662F4-9BBD-4f93-8FC4-A3A9561AE8EA", GUID_Format_Meter);
#define GUID_Format_Meter DEFINE_GUIDNAMED(GUID_Format_Meter)

// {4DEDEEF9-E61C-4b51-B619-E39F6807C0C3}
#define STATIC_GUID_Format_Bell \
	0x4dedeef9, 0xe61c, 0x4b51, 0xb6, 0x19, 0xe3, 0x9f, 0x68, 0x7, 0xc0, 0xc3
DEFINE_GUIDSTRUCT("4DEDEEF9-E61C-4b51-B619-E39F6807C0C3", GUID_Format_Bell);
#define GUID_Format_Bell DEFINE_GUIDNAMED(GUID_Format_Bell)

// {8D0973C5-C98E-43b7-8189-AF2952B49A41}
#define STATIC_GUID_Format_Hertz \
	0x8d0973c5, 0xc98e, 0x43b7, 0x81, 0x89, 0xaf, 0x29, 0x52, 0xb4, 0x9a, 0x41
DEFINE_GUIDSTRUCT("8D0973C5-C98E-43b7-8189-AF2952B49A41", GUID_Fomats_Hertz);
#define GUID_Format_Hertz DEFINE_GUIDNAMED(GUID_Format_Hertz)

// {33E800B1-0165-4b5f-9711-DE597B33171C}
#define STATIC_GUID_Format_Gramm \
	0x33e800b1, 0x165, 0x4b5f, 0x97, 0x11, 0xde, 0x59, 0x7b, 0x33, 0x17, 0x1c
DEFINE_GUIDSTRUCT("33E800B1-0165-4b5f-9711-DE597B33171C", GUID_Format_Gramm);
#define GUID_Format_Gramm DEFINE_GUIDNAMED(GUID_Format_Gramm)

// {6B69E131-767E-4ccc-A406-2B0041284ACE}
#define STATIC_GUID_Format_Percent \
	0x6b69e131, 0x767e, 0x4ccc, 0xa4, 0x6, 0x2b, 0x0, 0x41, 0x28, 0x4a, 0xce
DEFINE_GUIDSTRUCT("6B69E131-767E-4ccc-A406-2B0041284ACE", GUID_Format_Percent);
#define GUID_Format_Percent DEFINE_GUIDNAMED(GUID_Format_Percent)

// {8FED29EC-4D14-4fb4-ACEC-55CEC85FB7FA}
#define STATIC_GUID_Format_Volt \
	0x8fed29ec, 0x4d14, 0x4fb4, 0xac, 0xec, 0x55, 0xce, 0xc8, 0x5f, 0xb7, 0xfa
DEFINE_GUIDSTRUCT("8FED29EC-4D14-4fb4-ACEC-55CEC85FB7FA", GUID_Format_Volt);
#define GUID_Format_Volt DEFINE_GUIDNAMED(GUID_Format_Volt)

typedef DATAFORMAT KSPROPERTY_DATA_FORMAT, *PKSPROPERTY_DATA_FORMAT;

typedef DATAFORMAT_BOUNDS KSPROPERTY_DATAFORMAT_BOUNDS, *PKSPROPERTY_DATAFORMAT_BOUNDS;

// управления форматами передачи потоковых данных

// для М-режима
// {8B12DEAE-3D1E-4e10-A562-B92EA9382BA2}
#define STATIC_KSPROPSETID_UsgMFormat \
	0x8b12deae, 0x3d1e, 0x4e10, 0xa5, 0x62, 0xb9, 0x2e, 0xa9, 0x38, 0x2b, 0xa2
DEFINE_GUIDSTRUCT("8B12DEAE-3D1E-4e10-A562-B92EA9382BA2", KSPROPSETID_UsgMFormat);
#define KSPROPSETID_UsgMFormat DEFINE_GUIDNAMED(KSPROPSETID_UsgMFormat)

enum
{
	KSPROPERTY_UsgMFormat_FormatIndex = 0,	// код текущего и количество разных форматов для М режима (сейчас 1)
	KSPROPERTY_UsgMFormat_FormatSize,		// количество байт для получения указанного формата
	KSPROPERTY_UsgMFormat_Format,			// получение и установление формата
	KSPROPERTY_UsgMFormat_FormatCaps,		// только получение возможностей формата
};

// для B-режима
// {8B090172-9C66-49ce-A69F-008B12DF1693}
#define STATIC_KSPROPSETID_UsgBFormat \
	0x8b090172, 0x9c66, 0x49ce, 0xa6, 0x9f, 0x0, 0x8b, 0x12, 0xdf, 0x16, 0x93
DEFINE_GUIDSTRUCT("8B090172-9C66-49ce-A69F-008B12DF1693", KSPROPSETID_UsgBFormat);
#define KSPROPSETID_UsgBFormat DEFINE_GUIDNAMED(KSPROPSETID_UsgBFormat)

enum
{
	KSPROPERTY_UsgBFormat_FormatIndex = 0,	// код текущего и количество разных форматов для B режима (сейчас 1)
	KSPROPERTY_UsgBFormat_FormatSize,		// количество байт для получения указанного формата
	KSPROPERTY_UsgBFormat_Format,			// получение и установление формата
	KSPROPERTY_UsgBFormat_FormatCaps,		// только получение возможностей формата
};

typedef struct
{
	KSPROPERTY property;
	ULONG focusSet;
} KSPROPERTY_FOCUS_DATA_S, *PKSPROPERTY_FOCUS_DATA_S;

typedef struct
{
	KSPROPERTY property;
	ULONG focusSet;
} KSPROPERTY_USGFOCUSDESC_S, *PKSPROPERTY_USGFOCUSDESC_S;

typedef struct
{
	ULONG FocusSetIndex;
	ULONG DescriptionSize;
	ULONG FocusesSetNum;
	ULONG Reserved;
} FOCUSES_DESC_INFO, *PFOCUSES_DESC_INFO;

#define FOCUS_MODE_MULTI	1
#define FOCUS_MODE_DYNAMIC	2
#define FOCUS_MODE_SELECTABLE	3

typedef struct
{
	ULONG TransmitMode;
	ULONG ReceiveMode;
	ULONG MinFocusNum;
	ULONG MaxFocusNum;
	ULONG Reserved1;
	ULONG Reserved2;
} FOCUS_SET_MODE, *PFOCUS_SET_MODE;

typedef struct
{
	KSPROPERTY property;
	ULONG focusSet;
} KSPROPERTY_FOCUS_MODE_S, *PKSPROPERTY_FOCUS_MODE_S;

/*
typedef struct
{
	ULONG FocusSetIndex;
	ULONG FocusesNum;
} FOCUSSET_DATA, *PFOCUSSET_DATA;
*/
//
// управление характеристиками формирователя сигналов
//

//
// TGC
//

// {DAC83A09-83F4-4f5a-9401-D556B6C40068}
#define STATIC_KSPROPSETID_UsgTGC \
	0xdac83a09, 0x83f4, 0x4f5a, 0x94, 0x1, 0xd5, 0x56, 0xb6, 0xc4, 0x0, 0x68
DEFINE_GUIDSTRUCT("DAC83A09-83F4-4f5a-9401-D556B6C40068", KSPROPSETID_UsgTGC);
#define KSPROPSETID_UsgTGC DEFINE_GUIDNAMED(KSPROPSETID_UsgTGC)

enum
{
	KSPROPERTY_UsgTGC_TgcData = 0,
	KSPROPERTY_UsgTGC_KeyData,
	KSPROPERTY_UsgTGC_KeysNum,
	KSPROPERTY_UsgTGC_DataFormat,
	KSPROPERTY_UsgTGC_KeyFormat,
	KSPROPERTY_UsgTGC_ConvertTgcFormat,
	KSPROPERTY_UsgTGC_ConvertKeyFormat,
	KSPROPERTY_UsgTGC_InterpolationType,
};

//
// GAIN
//

// {31BF165C-92A8-4e6c-8995-A51DC714AE74}
#define STATIC_KSPROPSETID_UsgGain \
	0x31bf165c, 0x92a8, 0x4e6c, 0x89, 0x95, 0xa5, 0x1d, 0xc7, 0x14, 0xae, 0x74
DEFINE_GUIDSTRUCT("31BF165C-92A8-4e6c-8995-A51DC714AE74", KSPROPSETID_UsgGain);
#define KSPROPSETID_UsgGain DEFINE_GUIDNAMED(KSPROPSETID_UsgGain)

enum
{
	KSPROPERTY_UsgGain_GainData = 0,
	KSPROPERTY_UsgGain_DataFormat,
	KSPROPERTY_UsgGain_ConvertFormat,
};

// {1B89FDD3-B6D0-4057-B690-3BFB62D59BAC}
#define STATIC_KSEVENTSETID_UsgGain \
	0x1b89fdd3, 0xb6d0, 0x4057, 0xb6, 0x90, 0x3b, 0xfb, 0x62, 0xd5, 0x9b, 0xac
DEFINE_GUIDSTRUCT("1B89FDD3-B6D0-4057-B690-3BFB62D59BAC", KSEVENTSETID_UsgGain);
#define KSEVENTSETID_UsgGain DEFINE_GUIDNAMED(KSEVENTSETID_UsgGain)

enum
{
	KSEVENT_UsgGain_Data = 0,
	KSEVENT_UsgGain_DataRange,
};

//
// POWER
// 

// {6ABA6CFB-15B8-4b7e-8AB1-0C7D2443D3FA}
#define STATIC_KSPROPSETID_UsgPower \
	0x6aba6cfb, 0x15b8, 0x4b7e, 0x8a, 0xb1, 0xc, 0x7d, 0x24, 0x43, 0xd3, 0xfa
DEFINE_GUIDSTRUCT("6ABA6CFB-15B8-4b7e-8AB1-0C7D2443D3FA", KSPROPSETID_UsgPower);
#define KSPROPSETID_UsgPower DEFINE_GUIDNAMED(KSPROPSETID_UsgPower)

enum
{
	KSPROPERTY_UsgPower_PowerData = 0,
	KSPROPERTY_UsgPower_DataFormat,
	KSPROPERTY_UsgPower_ConvertFormat,
};

//
// Dynamic Range

// {E24F3609-1167-4715-9DD4-7D15F74D62B6}
#define STATIC_KSPROPSETID_UsgDynamicRange \
	0xe24f3609, 0x1167, 0x4715, 0x9d, 0xd4, 0x7d, 0x15, 0xf7, 0x4d, 0x62, 0xb6
DEFINE_GUIDSTRUCT("E24F3609-1167-4715-9DD4-7D15F74D62B6", KSPROPSETID_UsgDynamicRange);
#define KSPROPSETID_UsgDynamicRange DEFINE_GUIDNAMED(KSPROPSETID_UsgDynamicRange)

enum
{
	KSPROPERTY_UsgDynamicRange_Data = 0,
	KSPROPERTY_UsgDynamicRange_DataFormat,
	KSPROPERTY_UsgDynamicRange_ConvertFormat,
};


//
// Focal zones
//

// {C2D17B22-A90F-459d-ADF7-882DC57B6B72}
#define STATIC_KSPROPSETID_UsgFocus \
	0xc2d17b22, 0xa90f, 0x459d, 0xad, 0xf7, 0x88, 0x2d, 0xc5, 0x7b, 0x6b, 0x72
DEFINE_GUIDSTRUCT("C2D17B22-A90F-459d-ADF7-882DC57B6B72", KSPROPSETID_UsgFocus);
#define KSPROPSETID_UsgFocus DEFINE_GUIDNAMED(KSPROPSETID_UsgFocus)

enum
{
	KSPROPERTY_UsgFocus_Focus = 0,
	KSPROPERTY_UsgFocus_FocusSet,
	KSPROPERTY_UsgFocus_Desc,
	KSPROPERTY_UsgFocus_DescFormat,
	KSPROPERTY_UsgFocus_Gain,
	KSPROPERTY_UsgFocus_GainFormat,
	KSPROPERTY_UsgFocus_FocusMode,
};

// {EAE3EF96-F32B-44da-A815-DB96654E9070}
#define STATIC_KSEVENTSETID_UsgFocus \
	0xeae3ef96, 0xf32b, 0x44da, 0xa8, 0x15, 0xdb, 0x96, 0x65, 0x4e, 0x90, 0x70
DEFINE_GUIDSTRUCT("EAE3EF96-F32B-44da-A815-DB96654E9070", KSEVENTSETID_UsgFocus);
#define KSEVENTSETID_UsgFocus DEFINE_GUIDNAMED(KSEVENTSETID_UsgFocus)

enum
{
	KSEVENT_UsgFocus_Focus = 0,
	KSEVENT_UsgFocus_FocusSet,
	KSEVENT_UsgFocus_DataRange,
};

//
// wall filter
// 

// {A765D96B-090E-4cea-90F8-3C8F7FB660FD}
#define STATIC_KSPROPSETID_UsgWallFilter \
	0xa765d96b, 0x90e, 0x4cea, 0x90, 0xf8, 0x3c, 0x8f, 0x7f, 0xb6, 0x60, 0xfd
DEFINE_GUIDSTRUCT("A765D96B-090E-4cea-90F8-3C8F7FB660FD", KSPROPSETID_UsgWallFilter);
#define KSPROPSETID_UsgWallFilter DEFINE_GUIDNAMED(KSPROPSETID_UsgWallFilter)

enum
{
	KSPROPERTY_UsgWallFilter_Data = 0,
	KSPROPERTY_UsgWallFilter_DataFormat,
	KSPROPERTY_UsgWallFilter_ConvertFormat,
};

//
// doppler PulseRepetitionFrequency (PRF)
// {95A7DC6A-8222-4d61-A8DC-390D55D047EF}
#define STATIC_KSPROPSETID_UsgPRF \
	0x95a7dc6a, 0x8222, 0x4d61, 0xa8, 0xdc, 0x39, 0xd, 0x55, 0xd0, 0x47, 0xef
DEFINE_GUIDSTRUCT("95A7DC6A-8222-4d61-A8DC-390D55D047EF", KSPROPSETID_UsgPRF);
#define KSPROPSETID_UsgPRF DEFINE_GUIDNAMED(KSPROPSETID_UsgPRF)

enum
{
	KSPROPERTY_UsgPRF_Data = 0,
	KSPROPERTY_UsgPRF_DataFormat,
	KSPROPERTY_UsgPRF_ConvertFormat,
};


// {900A9B16-8BAF-48fa-AA14-95620BA8BA35}
#define STATIC_KSEVENTSETID_UsgPRF \
	0x900a9b16, 0x8baf, 0x48fa, 0xaa, 0x14, 0x95, 0x62, 0xb, 0xa8, 0xba, 0x35
DEFINE_GUIDSTRUCT("900A9B16-8BAF-48fa-AA14-95620BA8BA35", KSEVENTSETID_UsgPRF);
#define KSEVENTSETID_UsgPRF DEFINE_GUIDNAMED(KSEVENTSETID_UsgPRF)

enum
{
	KSEVENT_UsgPRF_Data = 0,
	KSEVENT_UsgPRF_DataRange,
};


// {1A3BC654-CE4A-4c61-8901-9BB0060E9099}
#define STATIC_KSPROPSETID_UsgSignalScale \
	0x1a3bc654, 0xce4a, 0x4c61, 0x89, 0x1, 0x9b, 0xb0, 0x6, 0xe, 0x90, 0x99
DEFINE_GUIDSTRUCT("1A3BC654-CE4A-4c61-8901-9BB0060E9099", KSPROPSETID_UsgSignalScale);
#define KSPROPSETID_UsgSignalScale DEFINE_GUIDNAMED(KSPROPSETID_UsgSignalScale)
enum
{
	KSPROPERTY_UsgSignalScale_Data = 0,
	KSPROPERTY_UsgSignalScale_DataFormat,
	KSPROPERTY_UsgSignalScale_ConvertFormat,
};

// {835A842F-2F4A-4a4a-8C07-BE54F575F893}
#define STATIC_KSPROPSETID_UsgSignalSmooth \
	0x835a842f, 0x2f4a, 0x4a4a, 0x8c, 0x7, 0xbe, 0x54, 0xf5, 0x75, 0xf8, 0x93
DEFINE_GUIDSTRUCT("835A842F-2F4A-4a4a-8C07-BE54F575F893", KSPROPSETID_UsgSignalSmooth);
#define KSPROPSETID_UsgSignalSmooth DEFINE_GUIDNAMED(KSPROPSETID_UsgSignalSmooth)
enum
{
	KSPROPERTY_UsgSignalSmooth_Data = 0,
	KSPROPERTY_UsgSignalSmooth_DataFormat,
	KSPROPERTY_UsgSignalSmooth_ConvertFormat,
};

// {3AFA68B5-7EF5-4936-B624-C4F676392856}
#define STATIC_KSPROPSETID_UsgSteerAngle \
	0x3afa68b5, 0x7ef5, 0x4936, 0xb6, 0x24, 0xc4, 0xf6, 0x76, 0x39, 0x28, 0x56
DEFINE_GUIDSTRUCT("3AFA68B5-7EF5-4936-B624-C4F676392856", KSPROPSETID_UsgSteerAngle);
#define KSPROPSETID_UsgSteerAngle DEFINE_GUIDNAMED(KSPROPSETID_UsgSteerAngle)
enum
{
	KSPROPERTY_UsgSteerAngle_Data = 0,
};

// {10BA9951-796F-4199-924C-2331A130417C}
#define STATIC_KSPROPSETID_UsgPacketSize \
	0x10ba9951, 0x796f, 0x4199, 0x92, 0x4c, 0x23, 0x31, 0xa1, 0x30, 0x41, 0x7c
DEFINE_GUIDSTRUCT("10BA9951-796F-4199-924C-2331A130417C", KSPROPSETID_UsgPacketSize);
#define KSPROPSETID_UsgPacketSize DEFINE_GUIDNAMED(KSPROPSETID_UsgPacketSize)
enum
{
	KSPROPERTY_UsgPacketSize_Data = 0,
};

// {33DB9A10-AECD-4284-A959-F9E2A4E36893}
#define STATIC_KSPROPSETID_UsgSpectralAvg \
	0x33db9a10, 0xaecd, 0x4284, 0xa9, 0x59, 0xf9, 0xe2, 0xa4, 0xe3, 0x68, 0x93
DEFINE_GUIDSTRUCT("33DB9A10-AECD-4284-A959-F9E2A4E36893", KSPROPSETID_UsgSpectralAvg);
#define KSPROPSETID_UsgSpectralAvg DEFINE_GUIDNAMED(KSPROPSETID_UsgSpectralAvg)
enum
{
	KSPROPERTY_UsgSpectralAvg_Data = 0,
};


// {3F68958A-C00C-48a0-81A3-98FD4CEF88D1}
#define STATIC_KSPROPSETID_UsgAudioVolume \
	0x3f68958a, 0xc00c, 0x48a0, 0x81, 0xa3, 0x98, 0xfd, 0x4c, 0xef, 0x88, 0xd1
DEFINE_GUIDSTRUCT("3F68958A-C00C-48a0-81A3-98FD4CEF88D1", KSPROPSETID_UsgAudioVolume);
#define KSPROPSETID_UsgAudioVolume DEFINE_GUIDNAMED(KSPROPSETID_UsgAudioVolume)
enum
{
	KSPROPERTY_UsgAudioVolume_Data = 0,
	KSPROPERTY_UsgAudioVolume_DataFormat,
	KSPROPERTY_UsgAudioVolume_ConvertFormat,
};

// {706AC30D-57D0-48b5-A54B-06BBEEADE052}
#define STATIC_KSPROPSETID_UsgBioeffectsIndices \
	0x706ac30d, 0x57d0, 0x48b5, 0xa5, 0x4b, 0x6, 0xbb, 0xee, 0xad, 0xe0, 0x52
DEFINE_GUIDSTRUCT("706AC30D-57D0-48b5-A54B-06BBEEADE052", KSPROPSETID_UsgBioeffectsIndices);
#define KSPROPSETID_UsgBioeffectsIndices DEFINE_GUIDNAMED(KSPROPSETID_UsgBioeffectsIndices)
enum
{
	KSPROPERTY_UsgBioeffectsIndex_MI = 0,
	KSPROPERTY_UsgBioeffectsIndex_TI,
	KSPROPERTY_UsgBioeffectsIndex_TIS,
	KSPROPERTY_UsgBioeffectsIndex_TIB,
	KSPROPERTY_UsgBioeffectsIndex_TIC,
};

// events of bioeffect indices change
// {41B4C23D-8D28-41a6-AA49-F13EE2925257}
#define STATIC_KSEVENTSETID_UsgBioeffectsIndex \
	0x41b4c23d, 0x8d28, 0x41a6, 0xaa, 0x49, 0xf1, 0x3e, 0xe2, 0x92, 0x52, 0x57
DEFINE_GUIDSTRUCT("41B4C23D-8D28-41a6-AA49-F13EE2925257", KSEVENTSETID_UsgBioeffectsIndex);
#define KSEVENTSETID_UsgBioeffectsIndex DEFINE_GUIDNAMED(KSEVENTSETID_UsgBioeffectsIndex)

enum
{
	KSEVENT_UsgBioeffectsIndex = 0,
	KSEVENT_UsgBioeffectsIndex_MI,
	KSEVENT_UsgBioeffectsIndex_TI,
	KSEVENT_UsgBioeffectsIndex_TIS,
	KSEVENT_UsgBioeffectsIndex_TIB,
	KSEVENT_UsgBioeffectsIndex_TIC,
};


//
// KSEVENTS
//

// 
//	TGC
// 

// {682C967F-7F23-496e-92A7-DC43A9855B64}
#define STATIC_USG_KSEVENTSETID_TGCNOTIFY \
	0x682c967f, 0x7f23, 0x496e, 0x92, 0xa7, 0xdc, 0x43, 0xa9, 0x85, 0x5b, 0x64
DEFINE_GUIDSTRUCT("682C967F-7F23-496e-92A7-DC43A9855B64", USG_KSEVENTSETID_TGCNOTIFY);
#define USG_KSEVENTSETID_TGCNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_TGCNOTIFY)

enum
{
	KSEVENT_TGCNOTIFY_TGCCHANGED = 0,
	KSEVENT_TGCNOTIFY_KEYCHANGED,
	KSEVENT_TGCNOTIFY_KEYSNUMCHANGED,
	KSEVENT_TGCNOTIFY_TGCFORMATCHANGED,
	KSEVENT_TGCNOTIFY_KEYFORMATCHANGED,
};

//
// GAIN
// 

// {836C33EE-3BB9-4b6b-ACF3-ABFAEACFC8B6}
#define STATIC_USG_KSEVENTSETID_GAINNOTIFY \
	0x836c33ee, 0x3bb9, 0x4b6b, 0xac, 0xf3, 0xab, 0xfa, 0xea, 0xcf, 0xc8, 0xb6
DEFINE_GUIDSTRUCT("836C33EE-3BB9-4b6b-ACF3-ABFAEACFC8B6", USG_KSEVENTSETID_GAINNOTIFY);
#define USG_KSEVENTSETID_GAINNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_GAINNOTIFY)

enum
{
	KSEVENT_GAINNOTIFY_GAINCHANGED = 0,
	KSEVENT_GAINNOTIFY_FORMATCHANGED,
};

// 
// POWER
// 

// {08B10119-85A7-4934-873C-262CF06C4D87}
#define STATIC_USG_KSEVENTSETID_POWERNOTIFY \
	0x8b10119, 0x85a7, 0x4934, 0x87, 0x3c, 0x26, 0x2c, 0xf0, 0x6c, 0x4d, 0x87
DEFINE_GUIDSTRUCT("08B10119-85A7-4934-873C-262CF06C4D87", USG_KSEVENTSETID_POWERNOTIFY);
#define USG_KSEVENTSETID_POWERNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_POWERNOTIFY)

enum
{
	KSEVENT_POWERNOTIFY_POWERCHANGED = 0,
	KSEVENT_POWERNOTIFY_FORMATCHANGED,
};

//
//	DYNAMIC RANGE
// 

// {6CCCA293-0ECF-4775-845E-7F9098F0F055}
#define STATIC_USG_KSEVENTSETID_DYNRANGENOTIFY \
	0x6ccca293, 0xecf, 0x4775, 0x84, 0x5e, 0x7f, 0x90, 0x98, 0xf0, 0xf0, 0x55
DEFINE_GUIDSTRUCT("6CCCA293-0ECF-4775-845E-7F9098F0F055", USG_KSEVENTSETID_DYNRANGENOTIFY);
#define USG_KSEVENTSETID_DYNRANGENOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_DYNRANGENOTIFY)

enum
{
	KSEVENT_DYNRANGENOTIFY_DYNRANGECHANGED = 0,
	KSEVENT_DYNRANGENOTIFY_FORMATCHANGED,
};

// 
//	FOCAL ZONES
// 

// {C9C5CEFC-5F1B-48a1-924C-B18F8E03558C}
#define STATIC_USG_KSEVENTSETID_FOCUSNOTIFY \
	0xc9c5cefc, 0x5f1b, 0x48a1, 0x92, 0x4c, 0xb1, 0x8f, 0x8e, 0x3, 0x55, 0x8c
DEFINE_GUIDSTRUCT("C9C5CEFC-5F1B-48a1-924C-B18F8E03558C", USG_KSEVENTSETID_FOCUSNOTIFY);
#define USG_KSEVENTSETID_FOCUSNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_FOCUSNOTIFY)

enum
{
	KSEVENT_FOCUSNOTIFY_FOCUSCHANGED = 0,
	KSEVENT_FOCUSNOTIFY_FOCUSSETCHANGED,
	KSEVENT_FOCUSNOTIFY_GAINCHANGED,
	KSEVENT_FOCUSNOTIFY_GAINFORMATCHANGED,
};

//
// AGC
// 

// {FD9340C6-BC51-4cae-A358-201809140DC8}
#define STATIC_KSPROPSETID_UsgAGC \
	0xfd9340c6, 0xbc51, 0x4cae, 0xa3, 0x58, 0x20, 0x18, 0x9, 0x14, 0xd, 0xc8
DEFINE_GUIDSTRUCT("FD9340C6-BC51-4cae-A358-201809140DC8", KSPROPSETID_UsgAGC);
#define KSPROPSETID_UsgAGC DEFINE_GUIDNAMED(KSPROPSETID_UsgAGC)



enum
{
	KSPROPERTY_UsgAGC_AgcData = 0,
	KSPROPERTY_UsgAGC_KeyData,
	KSPROPERTY_UsgAGC_KeysNum,
	KSPROPERTY_UsgAGC_DataFormat,
	KSPROPERTY_UsgAGC_KeyFormat,
	KSPROPERTY_UsgAGC_ConvertAgcFormat,
	KSPROPERTY_UsgAGC_ConvertKeyFormat,
	KSPROPERTY_UsgAGC_InterpolationType,
};

//
// TFC
//

// {B5770E3E-124D-4509-8413-9AE7FFBB7DE5}
#define STATIC_KSPROPSETID_UsgTFC \
	0xb5770e3e, 0x124d, 0x4509, 0x84, 0x13, 0x9a, 0xe7, 0xff, 0xbb, 0x7d, 0xe5
DEFINE_GUIDSTRUCT("B5770E3E-124D-4509-8413-9AE7FFBB7DE5", KSPROPSETID_UsgTFC);
#define KSPROPSETID_UsgTFC DEFINE_GUIDNAMED(KSPROPSETID_UsgTFC)

enum
{
	KSPROPERTY_UsgTFC_TfcData = 0,
	KSPROPERTY_UsgTFC_KeyData,
	KSPROPERTY_UsgTFC_KeysNum,
	KSPROPERTY_UsgTFC_DataFormat,
	KSPROPERTY_UsgTFC_KeyFormat,
	KSPROPERTY_UsgTFC_ConvertTfcFormat,
	KSPROPERTY_UsgTFC_ConvertKeyFormat,
	KSPROPERTY_UsgTFC_InterpolationType,
};

//
// Pulse Duration
//

// {402E4101-5CFA-4956-B50D-347C8D829FC0}
#define STATIC_KSPROPSETID_UsgPulseDuration \
	0x402e4101, 0x5cfa, 0x4956, 0xb5, 0xd, 0x34, 0x7c, 0x8d, 0x82, 0x9f, 0xc0
DEFINE_GUIDSTRUCT("402E4101-5CFA-4956-B50D-347C8D829FC0", KSPROPSETID_UsgPulseDuration);
#define KSPROPSETID_UsgPulseDuration DEFINE_GUIDNAMED(KSPROPSETID_UsgPulseDuration)

enum
{
	KSPROPERTY_UsgPulseDuration_Data = 0,
	KSPROPERTY_UsgPulseDuration_DataFormat,
	KSPROPERTY_UsgPulseDuration_ConvertFormat,
};


// {84548AC7-6A9A-468b-A3C7-5A2AD0BAD821}
#define STATIC_KSPROPSETID_UsgPulsesNumber \
	0x84548ac7, 0x6a9a, 0x468b, 0xa3, 0xc7, 0x5a, 0x2a, 0xd0, 0xba, 0xd8, 0x21
DEFINE_GUIDSTRUCT("84548AC7-6A9A-468b-A3C7-5A2AD0BAD821", KSPROPSETID_UsgPulsesNumber);
#define KSPROPSETID_UsgPulsesNumber DEFINE_GUIDNAMED(KSPROPSETID_UsgPulsesNumber)

enum
{
	KSPROPERTY_UsgPulsesNumber_Data = 0,
};


//
// KSEVENTS
//

//
// AGC
//

// {2BC78551-FD3C-472b-BDBC-AACBE8D7170D}
#define STATIC_USG_KSEVENTSETID_AGCNOTIFY \
	0x2bc78551, 0xfd3c, 0x472b, 0xbd, 0xbc, 0xaa, 0xcb, 0xe8, 0xd7, 0x17, 0xd
DEFINE_GUIDSTRUCT("2BC78551-FD3C-472b-BDBC-AACBE8D7170D", USG_KSEVENTSETID_AGCNOTIFY);
#define USG_KSEVENTSETID_AGCNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_AGCNOTIFY)

enum
{
	KSEVENT_AGCNOTIFY_AGCCHANGED = 0,
	KSEVENT_AGCNOTIFY_KEYCHANGED,
	KSEVENT_AGCNOTIFY_KEYSNUMCHANGED,
	KSEVENT_AGCNOTIFY_AGCFORMATCHANGED,
	KSEVENT_AGCNOTIFY_KEYFORMATCHANGED,
};

//
// TFC
//

// {147A1A80-2B41-4bfe-B519-ED6EAE3C950F}
#define STATIC_USG_KSEVENTSETID_TFCNOTIFY \
	0x147a1a80, 0x2b41, 0x4bfe, 0xb5, 0x19, 0xed, 0x6e, 0xae, 0x3c, 0x95, 0xf
DEFINE_GUIDSTRUCT("147A1A80-2B41-4bfe-B519-ED6EAE3C950F", USG_KSEVENTSETID_TFCNOTIFY);
#define USG_KSEVENTSETID_TFCNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_TFCNOTIFY)

enum
{
	KSEVENT_TFCNOTIFY_TFCCHANGED = 0,
	KSEVENT_TFCNOTIFY_KEYCHANGED,
	KSEVENT_TFCNOTIFY_KEYSNUMCHANGED,
	KSEVENT_TFCNOTIFY_TFCFORMATCHANGED,
	KSEVENT_TFCNOTIFY_KEYFORMATCHANGED,
};

//
// PULSE DURATION
//

// {F40A3CF1-7BCC-4cee-9D46-C24DB7582033}
#define STATIC_USG_KSEVENTSETID_PDURNOTIFY \
	0xf40a3cf1, 0x7bcc, 0x4cee, 0x9d, 0x46, 0xc2, 0x4d, 0xb7, 0x58, 0x20, 0x33
DEFINE_GUIDSTRUCT("F40A3CF1-7BCC-4cee-9D46-C24DB7582033", USG_KSEVENTSETID_PDURNOTIFY);
#define USG_KSEVENTSETID_PDURNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_PDURNOTIFY)

enum
{
	KSEVENT_PDURNOTIFY_PDURCHANGED = 0,
	KSEVENT_PDURNOTIFY_FORMATCHANGED,
};


//
// Device Status
//

// {3100BA2A-6763-4772-A99F-00B5E22F7DA7}
#define STATIC_KSPROPSETID_UsgDeviceStatus \
	0x3100ba2a, 0x6763, 0x4772, 0xa9, 0x9f, 0x0, 0xb5, 0xe2, 0x2f, 0x7d, 0xa7
DEFINE_GUIDSTRUCT("3100BA2A-6763-4772-A99F-00B5E22F7DA7", KSPROPSETID_UsgDeviceStatus);
#define KSPROPSETID_UsgDeviceStatus DEFINE_GUIDNAMED(KSPROPSETID_UsgDeviceStatus)

enum
{
	KSPROPERTY_UsgDeviceStatus_Battery = 0,
};

//
// форматы потоковых данных
// 


// спецификаторы форматов

#define STATIC_KSDATAFORMAT_TYPE_ULTRASOUND\
    0x66677375L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("66677375-0000-0010-8000-00aa00389b71", KSDATAFORMAT_TYPE_ULTRASOUND);
#define KSDATAFORMAT_TYPE_ULTRASOUND DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_ULTRASOUND)

#define STATIC_KSDATAFORMAT_TYPE_ULTRASOUND_CARERAY\
	0x38c90b7e, 0x9ae6, 0x45aa, 0xb0, 0x75, 0x5c, 0x45, 0x8e, 0xd6, 0xb3, 0x6c
DEFINE_GUIDSTRUCT("38C90B7E-9AE6-45aa-B075-5C458ED6B36C", KSDATAFORMAT_TYPE_ULTRASOUND_CARERAY);
#define KSDATAFORMAT_TYPE_ULTRASOUND_CARERAY DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_ULTRASOUND_CARERAY)


// {D17849ED-B880-4b76-AF81-2E7F3CB0C7C6}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND\
	0xd17849ed, 0xb880, 0x4b76, 0xaf, 0x81, 0x2e, 0x7f, 0x3c, 0xb0, 0xc7, 0xc6
DEFINE_GUIDSTRUCT("D17849ED-B880-4b76-AF81-2E7F3CB0C7C6", KSDATAFORMAT_SUBTYPE_ULTRASOUND);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND)


// {CCACFE6B-4A08-4d45-8C24-0899F4B176DD}
#define STATIC_KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO \
	0xccacfe6b, 0x4a08, 0x4d45, 0x8c, 0x24, 0x8, 0x99, 0xf4, 0xb1, 0x76, 0xdd
DEFINE_GUIDSTRUCT("CCACFE6B-4A08-4d45-8C24-0899F4B176DD", KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO)

// {E1680100-7016-11d7-95E4-00E07D9563F1}
#define STATIC_KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO \
	0xe1680100, 0x7016, 0x11d7, 0x95, 0xe4, 0x0, 0xe0, 0x7d, 0x95, 0x63, 0xf1
DEFINE_GUIDSTRUCT("E1680100-7016-11d7-95E4-00E07D9563F1", KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO)

// {F36BB8FD-3A87-4db8-BEB3-FC3DF3302C03}
#define STATIC_KSDATAFORMAT_SPECIFIER_CFMULTRASOUNDINFO \
	0xf36bb8fd, 0x3a87, 0x4db8, 0xbe, 0xb3, 0xfc, 0x3d, 0xf3, 0x30, 0x2c, 0x3
DEFINE_GUIDSTRUCT("F36BB8FD-3A87-4db8-BEB3-FC3DF3302C03", KSDATAFORMAT_SPECIFIER_CFMULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_CFMULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_CFMULTRASOUNDINFO)

// {3B8B28E7-01F2-44ad-99B9-4ED38D48798B}
#define STATIC_KSDATAFORMAT_SPECIFIER_PWULTRASOUNDINFO \
	0x3b8b28e7, 0x1f2, 0x44ad, 0x99, 0xb9, 0x4e, 0xd3, 0x8d, 0x48, 0x79, 0x8b
DEFINE_GUIDSTRUCT("3B8B28E7-01F2-44ad-99B9-4ED38D48798B", KSDATAFORMAT_SPECIFIER_PWULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_PWULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_PWULTRASOUNDINFO)

// {8BF30DF2-CAA7-4ab4-B090-E3E72533745D}
#define STATIC_KSDATAFORMAT_SPECIFIER_CWULTRASOUNDINFO \
	0x8bf30df2, 0xcaa7, 0x4ab4, 0xb0, 0x90, 0xe3, 0xe7, 0x25, 0x33, 0x74, 0x5d
DEFINE_GUIDSTRUCT("8BF30DF2-CAA7-4ab4-B090-E3E72533745D", KSDATAFORMAT_SPECIFIER_CWULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_CWULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_CWULTRASOUNDINFO)

// {207572F4-8F75-4b6d-AF84-8DDBBD550423}
#define STATIC_KSDATAFORMAT_SPECIFIER_CMULTRASOUNDINFO \
	0x207572f4, 0x8f75, 0x4b6d, 0xaf, 0x84, 0x8d, 0xdb, 0xbd, 0x55, 0x4, 0x23
DEFINE_GUIDSTRUCT("207572F4-8F75-4b6d-AF84-8DDBBD550423", KSDATAFORMAT_SPECIFIER_CMULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_CMULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_CMULTRASOUNDINFO)
//////////////////////////////////////////////////////////////////////////
// pin categories
//////////////////////////////////////////////////////////////////////////

// {ACCA2EC1-9DA2-4765-8C9C-DD292C4BB06D}
#define STATIC_PINNAME_ULTRASOUND_MODEB \
	0xacca2ec1, 0x9da2, 0x4765, 0x8c, 0x9c, 0xdd, 0x29, 0x2c, 0x4b, 0xb0, 0x6d
DEFINE_GUIDSTRUCT("ACCA2EC1-9DA2-4765-8C9C-DD292C4BB06D", PINNAME_ULTRASOUND_MODEB);
#define PINNAME_ULTRASOUND_MODEB DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODEB)

// {81F0A449-1324-41fa-869B-6694EEF1E8D8}
#define STATIC_PINNAME_ULTRASOUND_MODEM \
	0x81f0a449, 0x1324, 0x41fa, 0x86, 0x9b, 0x66, 0x94, 0xee, 0xf1, 0xe8, 0xd8
DEFINE_GUIDSTRUCT("81F0A449-1324-41fa-869B-6694EEF1E8D8", PINNAME_ULTRASOUND_MODEM);
#define PINNAME_ULTRASOUND_MODEM DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODEM)

// {781EB925-F419-4543-8020-2514BB37A27A}
#define STATIC_PINNAME_ULTRASOUND_MODECD \
	0x781eb925, 0xf419, 0x4543, 0x80, 0x20, 0x25, 0x14, 0xbb, 0x37, 0xa2, 0x7a
DEFINE_GUIDSTRUCT("781EB925-F419-4543-8020-2514BB37A27A", PINNAME_ULTRASOUND_MODECD);
#define PINNAME_ULTRASOUND_MODECD DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODECD)

// {5FDCCCCC-F5DE-48d2-A4A3-E46A436E1494}
#define STATIC_PINNAME_ULTRASOUND_MODEPW \
	0x5fdccccc, 0xf5de, 0x48d2, 0xa4, 0xa3, 0xe4, 0x6a, 0x43, 0x6e, 0x14, 0x94
DEFINE_GUIDSTRUCT("5FDCCCCC-F5DE-48d2-A4A3-E46A436E1494", PINNAME_ULTRASOUND_MODEPW);
#define PINNAME_ULTRASOUND_MODEPW DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODEPW)

// {F38C0250-C2EC-45bb-A279-095E5DF1F03C}
#define STATIC_PINNAME_ULTRASOUND_MODE3D \
	0xf38c0250, 0xc2ec, 0x45bb, 0xa2, 0x79, 0x9, 0x5e, 0x5d, 0xf1, 0xf0, 0x3c
DEFINE_GUIDSTRUCT("F38C0250-C2EC-45bb-A279-095E5DF1F03C", PINNAME_ULTRASOUND_MODE3D);
#define PINNAME_ULTRASOUND_MODE3D DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODE3D)

// {E5C25845-55EA-451E-B0E8-0706E02DED14}
#define STATIC_PINNAME_ULTRASOUND_MODE2D_RF \
	0xe5c25845, 0x55ea, 0x451e, 0xb0, 0xe8, 0x7, 0x6, 0xe0, 0x2d, 0xed, 0x14
DEFINE_GUIDSTRUCT("E5C25845-55EA-451E-B0E8-0706E02DED14", PINNAME_ULTRASOUND_MODE2D_RF);
#define PINNAME_ULTRASOUND_MODE2D_RF DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODE2D_RF)

// {AD19D28C-54BA-448F-BBA4-6D0610F33DEC}
#define STATIC_PINNAME_ULTRASOUND_MODETM_RF \
	0xad19d28c, 0x54ba, 0x448f, 0xbb, 0xa4, 0x6d, 0x6, 0x10, 0xf3, 0x3d, 0xec
DEFINE_GUIDSTRUCT("AD19D28C-54BA-448F-BBA4-6D0610F33DEC", PINNAME_ULTRASOUND_MODETM_RF);
#define PINNAME_ULTRASOUND_MODETM_RF DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODETM_RF)

// {7B5B5C53-4776-4474-8D17-973FADA35795}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_B \
	0x7b5b5c53, 0x4776, 0x4474, 0x8d, 0x17, 0x97, 0x3f, 0xad, 0xa3, 0x57, 0x95
DEFINE_GUIDSTRUCT("7B5B5C53-4776-4474-8D17-973FADA35795", KSDATAFORMAT_SUBTYPE_ULTRASOUND_B);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_B DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_B)

// {7CB05E8F-0CCE-4264-B830-02BF594A16BF}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFM \
	0x7cb05e8f, 0xcce, 0x4264, 0xb8, 0x30, 0x2, 0xbf, 0x59, 0x4a, 0x16, 0xbf
DEFINE_GUIDSTRUCT("7CB05E8F-0CCE-4264-B830-02BF594A16BF", KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFM);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFM DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFM)

// power doppler format subtype
// {D3867668-F487-401b-AFB7-640343BAEE43}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_PDI \
	0xd3867668, 0xf487, 0x401b, 0xaf, 0xb7, 0x64, 0x3, 0x43, 0xba, 0xee, 0x43
DEFINE_GUIDSTRUCT("D3867668-F487-401b-AFB7-640343BAEE43", KSDATAFORMAT_SUBTYPE_ULTRASOUND_PDI);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_PDI DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_PDI)


// directional power doppler format subtype
// {E1FDE3F8-FDB8-4ca1-8904-BC20BAFA0991}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_DPDI \
	0xe1fde3f8, 0xfdb8, 0x4ca1, 0x89, 0x4, 0xbc, 0x20, 0xba, 0xfa, 0x9, 0x91
DEFINE_GUIDSTRUCT("E1FDE3F8-FDB8-4ca1-8904-BC20BAFA0991", KSDATAFORMAT_SUBTYPE_ULTRASOUND_DPDI);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_DPDI DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_DPDI)

// continious wave doppler format subtype
// {0ED47143-2F8D-4812-A917-4E0A64D95E69}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_CW \
	0xed47143, 0x2f8d, 0x4812, 0xa9, 0x17, 0x4e, 0xa, 0x64, 0xd9, 0x5e, 0x69
DEFINE_GUIDSTRUCT("0ED47143-2F8D-4812-A917-4E0A64D95E69", KSDATAFORMAT_SUBTYPE_ULTRASOUND_CW);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_CW DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_CW)

// {DF7D1992-DD4F-4341-88E4-A29FC06F8D59}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFMBIOSS \
	0xdf7d1992, 0xdd4f, 0x4341, 0x88, 0xe4, 0xa2, 0x9f, 0xc0, 0x6f, 0x8d, 0x59
DEFINE_GUIDSTRUCT("DF7D1992-DD4F-4341-88E4-A29FC06F8D59", KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFMBIOSS);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFMBIOSS DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_CFMBIOSS)

// {96BBEAF0-7830-4435-9486-896797AB1769}
// DEFINE_GUID(<<name>>, 
// 0x96bbeaf0, 0x7830, 0x4435, 0x94, 0x86, 0x89, 0x67, 0x97, 0xab, 0x17, 0x69);
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_CM \
	0x96bbeaf0, 0x7830, 0x4435, 0x94, 0x86, 0x89, 0x67, 0x97, 0xab, 0x17, 0x69
DEFINE_GUIDSTRUCT("96BBEAF0-7830-4435-9486-896797AB1769", KSDATAFORMAT_SUBTYPE_ULTRASOUND_CM);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_CM DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_CM)


typedef USGFRAMEINFOHEADER KS_USGFRAMEINFOHEADER, *PKS_USGFRAMEINFOHEADER;

//
// типы данных, описывающие УЗ данные, передаваемые в В-режиме сканирования
//

typedef USGFRAMEINFO_BMODE KS_BMODE_USGFRAMEINFO, *PKS_BMODE_USGFRAMEINFO;
typedef BULTRASOUND_INFOHEADER KS_BULTRASOUND_INFOHEADER, *PKS_BULTRASOUND_INFOHEADER;
typedef BULTRASOUND_INFO KS_BULTRASOUND_INFO, *PKS_BULTRASOUND_INFO;
typedef BULTRASOUND_STREAM_CONFIG_CAPS KS_BULTRASOUND_STREAM_CONFIG_CAPS, *PKS_BULTRASOUND_STREAM_CONFIG_CAPS;


// диапазон поддерживаемых разрешений для потока ультразвука в режиме B
typedef struct _KS_DATARANGE_BULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_BULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_BULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
	//USGBEAM_VECTOR UsgBeamVector[1];					// место для векторов лучей (может и не надо)
} KS_DATARANGE_BULTRASOUND, *PKS_DATARANGE_BULTRASOUND;

typedef struct _KS_DATAFORMAT_BULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_BULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_BULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_BULTRASOUNDINFOHEADER;

typedef struct _KS_DATAFORMAT_BULTRASOUNDINFO
{
	KSDATAFORMAT DataFormat;
	KS_BULTRASOUND_INFO UltrasoundInfo;
} KS_DATAFORMAT_BULTRASOUNDINFO,*PKS_DATAFORMAT_BULTRASOUNDINFO;


//
// типы данных, описывающие УЗ данные, передаваемые в М-режиме сканирования
//

typedef USGFRAMEINFO_MMODE KS_MMODE_USGFRAMEINFO, *PKS_MMODE_USGFRAMEINFO;
typedef MULTRASOUND_INFOHEADER KS_MULTRASOUND_INFOHEADER, *PKS_MULTRASOUND_INFOHEADER;
typedef MULTRASOUND_STREAM_CONFIG_CAPS KS_MULTRASOUND_STREAM_CONFIG_CAPS, *PKS_MULTRASOUND_STREAM_CONFIG_CAPS;

// диапазон поддерживаемых разрешений для потока ультразвука в режиме B
typedef struct _KS_DATARANGE_MULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_MULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_MULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_MULTRASOUND, *PKS_DATARANGE_MULTRASOUND;

typedef struct _KS_DATAFORMAT_MULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_MULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_MULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_MULTRASOUNDINFOHEADER;

// formats for PW data
//
// data types to describe ultrasonic data of PW-mode scanning
//

//typedef USGFRAMEINFO_PWMODE KS_PWMODE_USGFRAMEINFO, *PKS_PWMODE_USGFRAMEINFO;
typedef PWULTRASOUND_INFOHEADER KS_PWULTRASOUND_INFOHEADER, *PKS_PWULTRASOUND_INFOHEADER;
typedef PWULTRASOUND_STREAM_CONFIG_CAPS KS_PWULTRASOUND_STREAM_CONFIG_CAPS, *PKS_PWULTRASOUND_STREAM_CONFIG_CAPS;

// capabilities of PW mode formats
typedef struct _KS_DATARANGE_PWULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_PWULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_PWULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_PWULTRASOUND, *PKS_DATARANGE_PWULTRASOUND;

typedef struct _KS_DATAFORMAT_PWULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_PWULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_PWULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_PWULTRASOUNDINFOHEADER;

// formats for CW data
//
// data types to describe ultrasonic data of CW-mode scanning
//

typedef CWULTRASOUND_INFOHEADER KS_CWULTRASOUND_INFOHEADER, *PKS_CWULTRASOUND_INFOHEADER;
typedef CWULTRASOUND_STREAM_CONFIG_CAPS KS_CWULTRASOUND_STREAM_CONFIG_CAPS, *PKS_CWULTRASOUND_STREAM_CONFIG_CAPS;

// capabilities of CW mode formats
typedef struct _KS_DATARANGE_CWULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_CWULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_CWULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_CWULTRASOUND, *PKS_DATARANGE_CWULTRASOUND;

typedef struct _KS_DATAFORMAT_CWULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_CWULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_CWULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_CWULTRASOUNDINFOHEADER;

// formats for ColorM data
//
// data types to describe ultrasonic data of ColorM-mode scanning
//

typedef CMULTRASOUND_INFOHEADER KS_CMULTRASOUND_INFOHEADER, *PKS_CMULTRASOUND_INFOHEADER;
typedef CMULTRASOUND_STREAM_CONFIG_CAPS KS_CMULTRASOUND_STREAM_CONFIG_CAPS, *PKS_CMULTRASOUND_STREAM_CONFIG_CAPS;

// capabilities of CW mode formats
typedef struct _KS_DATARANGE_CMULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_CMULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_CMULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_CMULTRASOUND, *PKS_DATARANGE_CMULTRASOUND;

typedef struct _KS_DATAFORMAT_CMULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_CMULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_CMULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_CMULTRASOUNDINFOHEADER;

// formats for CFM data
//
// data types to describe ultrasonic data of CFM-mode scanning
//

typedef USGFRAMEINFO_CFMMODE KS_CFMMODE_USGFRAMEINFO, *PKS_CFMMODE_USGFRAMEINFO;
typedef CFMULTRASOUND_INFOHEADER KS_CFMULTRASOUND_INFOHEADER, *PKS_CFMULTRASOUND_INFOHEADER;
typedef CFMULTRASOUND_INFO KS_CFMULTRASOUND_INFO, *PKS_CFMULTRASOUND_INFO;
typedef CFMULTRASOUND_STREAM_CONFIG_CAPS KS_CFMULTRASOUND_STREAM_CONFIG_CAPS, *PKS_CFMULTRASOUND_STREAM_CONFIG_CAPS;

// диапазон поддерживаемых разрешений для потока ультразвука в режиме CFM
typedef struct _KS_DATARANGE_CFMULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_CFMULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_CFMULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_CFMULTRASOUND, *PKS_DATARANGE_CFMULTRASOUND;

typedef struct _KS_DATAFORMAT_CFMULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_CFMULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_CFMULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_CFMULTRASOUNDINFOHEADER;

typedef struct _KS_DATAFORMAT_CFMULTRASOUNDINFO
{
	KSDATAFORMAT DataFormat;
	KS_CFMULTRASOUND_INFO UltrasoundInfo;
} KS_DATAFORMAT_CFMULTRASOUNDINFO,*PKS_DATAFORMAT_CFMULTRASOUNDINFO;


//
// EchoBlaster 128 connectors

// {EB699AA3-81C8-4fe0-B027-D38129B88229}
#define STATIC_KSPROPSETID_UsgConnectors \
	0xeb699aa3, 0x81c8, 0x4fe0, 0xb0, 0x27, 0xd3, 0x81, 0x29, 0xb8, 0x82, 0x29
DEFINE_GUIDSTRUCT("EB699AA3-81C8-4fe0-B027-D38129B88229", KSPROPSETID_UsgConnectors);
#define KSPROPSETID_UsgConnectors DEFINE_GUIDNAMED(KSPROPSETID_UsgConnectors)

enum
{
	KSPROPERTY_ActiveConnector = 0
};


//
// Frequency

// {61D7F3B5-3F5A-4b9c-95BD-24262CB7A2CE}
#define STATIC_KSPROPSETID_Frequency \
	0x61d7f3b5, 0x3f5a, 0x4b9c, 0x95, 0xbd, 0x24, 0x26, 0x2c, 0xb7, 0xa2, 0xce
DEFINE_GUIDSTRUCT("61D7F3B5-3F5A-4b9c-95BD-24262CB7A2CE", KSPROPSETID_Frequency);
#define KSPROPSETID_Frequency DEFINE_GUIDNAMED(KSPROPSETID_Frequency)

enum
{
	KSPROPERTY_Frequency_Data = 0,
	KSPROPERTY_Frequency_DataFormat,
	KSPROPERTY_Frequency_ConvertFormat,
	KSPROPERTY_Frequency_Harmonic,
};

// {38AC887A-3BD3-4d22-A782-F1AE33969543}
#define STATIC_KSEVENTSETID_UsgFrequency \
	0x38ac887a, 0x3bd3, 0x4d22, 0xa7, 0x82, 0xf1, 0xae, 0x33, 0x96, 0x95, 0x43
DEFINE_GUIDSTRUCT("38AC887A-3BD3-4d22-A782-F1AE33969543", KSEVENTSETID_UsgFrequency);
#define KSEVENTSETID_UsgFrequency DEFINE_GUIDNAMED(KSEVENTSETID_UsgFrequency)

enum
{
	KSEVENT_UsgFrequency_Data = 0,
	KSEVENT_UsgFrequency_DataRange,
};


//
// Misc DevMode (TestMode)

// {D1998413-4C14-4d8a-8498-DD57F98AA9B6}
#define STATIC_KSPROPSETID_MiscDevMode \
	0xd1998413, 0x4c14, 0x4d8a, 0x84, 0x98, 0xdd, 0x57, 0xf9, 0x8a, 0xa9, 0xb6
DEFINE_GUIDSTRUCT("D1998413-4C14-4d8a-8498-DD57F98AA9B6", KSPROPSETID_MiscDevMode);
#define KSPROPSETID_MiscDevMode DEFINE_GUIDNAMED(KSPROPSETID_MiscDevMode)

enum
{
	KSPROPERTY_TESTMODE = 0,
	KSPROPERTY_EB128FEATURES
};

enum
{
	TESTMODE_OFF = 0,
	TESTMODE_ADCTEST,
	TESTMODE_CFMPULSE,
	TESTMODE_CDACOUSTICPOWER
};

enum
{
	EB128FEATURES_OFF = 0,
	EB128FEATURES_SCANSIGNAL = 1
};

// scanning type of SmartUs device (B-mode scanning)
// {58F6D3D6-087F-4d70-8633-622C94097A65}
// DEFINE_GUID(<<name>>, 
// 			0x58f6d3d6, 0x87f, 0x4d70, 0x86, 0x33, 0x62, 0x2c, 0x94, 0x9, 0x7a, 0x65);
#define STATIC_KSPROPSETID_SmartUsScanType \
	0x58f6d3d6, 0x87f, 0x4d70, 0x86, 0x33, 0x62, 0x2c, 0x94, 0x9, 0x7a, 0x65
DEFINE_GUIDSTRUCT("58F6D3D6-087F-4d70-8633-622C94097A65", KSPROPSETID_SmartUsScanType);
#define KSPROPSETID_SmartUsScanType DEFINE_GUIDNAMED(KSPROPSETID_SmartUsScanType)

enum
{
	KSPROPERTY_SMARTUS_SCANTYPE_TRAPEZOID = 0,
};

// {730844FF-76F8-4ae3-AE46-6CCD1FD5D979}
// DEFINE_GUID(<<name>>, 
// 0x730844ff, 0x76f8, 0x4ae3, 0xae, 0x46, 0x6c, 0xcd, 0x1f, 0xd5, 0xd9, 0x79);
#define STATIC_KSMETHODSETID_SmartUsRfData \
	0x730844ff, 0x76f8, 0x4ae3, 0xae, 0x46, 0x6c, 0xcd, 0x1f, 0xd5, 0xd9, 0x79
DEFINE_GUIDSTRUCT("730844FF-76F8-4ae3-AE46-6CCD1FD5D979", KSMETHODSETID_SmartUsRfData);
#define KSMETHODSETID_SmartUsRfData DEFINE_GUIDNAMED(KSMETHODSETID_SmartUsRfData)

enum
{
	KSMETHOD_SMARTUS_RFREAD_MODE = 0,
	KSMETHOD_SMARTUS_RFREAD_BLOCKSTART = 1,
	KSMETHOD_SMARTUS_RFREAD_BLOCKGET = 2,
	KSMETHOD_SMARTUS_RFREAD_SCANADJUSTCD = 3,
};

typedef struct
{
	KSMETHOD property;
	ULONG dwParam;
} KSMETHOD_RFREAD_PARAM1, *PKSMETHOD_RFREAD_PARAM1;

// {28D76D44-A7D8-425d-BCFC-E104CB73EFD7}
#define STATIC_KSMETHODSETID_SmartUsExtSynch \
	0x28d76d44, 0xa7d8, 0x425d, 0xbc, 0xfc, 0xe1, 0x4, 0xcb, 0x73, 0xef, 0xd7
DEFINE_GUIDSTRUCT("28D76D44-A7D8-425d-BCFC-E104CB73EFD7", KSMETHODSETID_SmartUsExtSynch);
#define KSMETHODSETID_SmartUsExtSynch DEFINE_GUIDNAMED(KSMETHODSETID_SmartUsExtSynch)

enum
{
	KSMETHOD_SMARTUS_EXTSYNCH_SET = 0,
	KSMETHOD_SMARTUS_EXTSYNCH_GET = 1,
	KSMETHOD_SMARTUS_SYNCHCONFIGURATION_SET = 2,
	KSMETHOD_SMARTUS_SYNCHCONFIGURATION_GET = 3,
	KSMETHOD_SMARTUS_SYNCH_BEAMS_RESET = 4,
};

// {C8F505CE-8E06-4098-AD56-43FB311B7B8B}
#define STATIC_KSPROPSETID_ArtusResearchDataTypeRF \
	0xc8f505ce, 0x8e06, 0x4098, 0xad, 0x56, 0x43, 0xfb, 0x31, 0x1b, 0x7b, 0x8b
DEFINE_GUIDSTRUCT("C8F505CE-8E06-4098-AD56-43FB311B7B8B", KSPROPSETID_ArtusResearchDataTypeRF);
#define KSPROPSETID_ArtusResearchDataTypeRF DEFINE_GUIDNAMED(KSPROPSETID_ArtusResearchDataTypeRF)

enum
{
	KSPROPERTY_ArtusResearchDataTypeRF = 0,
};

/*
// {EAACB26A-04A8-424C-A389-79E5D93695A9}
#define STATIC_KSPROPSETID_OutputRF \
	0xeaacb26a, 0x4a8, 0x424c, 0xa3, 0x89, 0x79, 0xe5, 0xd9, 0x36, 0x95, 0xa9
DEFINE_GUIDSTRUCT("EAACB26A-04A8-424C-A389-79E5D93695A9", KSPROPSETID_OutputRF);
#define KSPROPSETID_OutputRF DEFINE_GUIDNAMED(KSPROPSETID_OutputRF)

enum
{
	KSPROPERTY_OutputRF_Window = 0,
};
*/

//
// parallel beamforming
// 

// {2BFCE112-966B-4684-8F7C-EDC3406A8D41}
#define STATIC_KSPROPSETID_UsgParallelBeamforming \
	0x2bfce112, 0x966b, 0x4684, 0x8f, 0x7c, 0xed, 0xc3, 0x40, 0x6a, 0x8d, 0x41
DEFINE_GUIDSTRUCT("2BFCE112-966B-4684-8F7C-EDC3406A8D41", KSPROPSETID_UsgParallelBeamforming);
#define KSPROPSETID_UsgParallelBeamforming DEFINE_GUIDNAMED(KSPROPSETID_UsgParallelBeamforming)

enum
{
	KSPROPERTY_UsgParallelBeamforming_MultiBeam = 0,
};


#if defined(__cplusplus)
}
#endif // defined(__cplusplus)

#endif	// _USGSTREAM_H_
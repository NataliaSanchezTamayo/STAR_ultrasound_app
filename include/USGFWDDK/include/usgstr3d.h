#ifndef __USGSTR3D_H__
#define __USGSTR3D_H__

#include "usgdata3d.h"


//
// data types that describes ultrasound data in 3D mode scanning
//

typedef USGVOLUMEINFOHEADER KS_USGVOLUMEINFOHEADER, *PKS_USGVOLUMEINFOHEADER;
typedef VULTRASOUND_INFOHEADER KS_VULTRASOUND_INFOHEADER, *PKS_VULTRASOUND_INFOHEADER;
typedef VULTRASOUND_INFO KS_VULTRASOUND_INFO, *PKS_VULTRASOUND_INFO;
typedef VULTRASOUND_STREAM_CONFIG_CAPS KS_VULTRASOUND_STREAM_CONFIG_CAPS, *PKS_VULTRASOUND_STREAM_CONFIG_CAPS;

// {47CFCAEF-2EC6-4d28-8226-86A713D333A4}
#define STATIC_KSDATAFORMAT_SPECIFIER_VULTRASOUNDINFO \
	0x47cfcaef, 0x2ec6, 0x4d28, 0x82, 0x26, 0x86, 0xa7, 0x13, 0xd3, 0x33, 0xa4
DEFINE_GUIDSTRUCT("47CFCAEF-2EC6-4d28-8226-86A713D333A4", KSDATAFORMAT_SPECIFIER_VULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_VULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_VULTRASOUNDINFO)

/*
// {47CFCAEF-2EC6-4d28-8226-86A713D333A4}
DEFINE_GUID(<<name>>, 
0x47cfcaef, 0x2ec6, 0x4d28, 0x82, 0x26, 0x86, 0xa7, 0x13, 0xd3, 0x33, 0xa4);
*/

// диапазон поддерживаемых разрешений для потока ультразвука в режиме 3D
typedef struct _KS_DATARANGE_VULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_VULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_VULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_VULTRASOUND, *PKS_DATARANGE_VULTRASOUND;

typedef struct _KS_DATAFORMAT_VULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_VULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_VULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_VULTRASOUNDINFOHEADER;

typedef struct _KS_DATAFORMAT_VULTRASOUNDINFO
{
	KSDATAFORMAT DataFormat;
	KS_VULTRASOUND_INFO UltrasoundInfo;
} KS_DATAFORMAT_VULTRASOUNDINFO,*PKS_DATAFORMAT_VULTRASOUNDINFO;

#endif	// __USGSTR3D_H__
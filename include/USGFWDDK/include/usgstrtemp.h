#ifndef __USGSTREAMTEMP_H__
#define __USGSTREAMTEMP_H__

#include "usgdatatemp.h"
#include "usgstr.h"

#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)

// specification of new data format
// {958BE04D-A92C-4fe7-8F7B-F93715066323}
#define STATIC_KSDATAFORMAT_SPECIFIER_ULTRASOUNDINFO2D \
0x958be04d, 0xa92c, 0x4fe7, 0x8f, 0x7b, 0xf9, 0x37, 0x15, 0x6, 0x63, 0x23
DEFINE_GUIDSTRUCT("958BE04D-A92C-4fe7-8F7B-F93715066323", KSDATAFORMAT_SPECIFIER_ULTRASOUNDINFO2D);
#define KSDATAFORMAT_SPECIFIER_ULTRASOUNDINFO2D DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_ULTRASOUNDINFO2D)

// identifier for B-mode 2D scanning media subtype
// {4351D676-A60D-40e5-A4E2-1DECE0B17706}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_VIRTCONVEX \
	0x4351d676, 0xa60d, 0x40e5, 0xa4, 0xe2, 0x1d, 0xec, 0xe0, 0xb1, 0x77, 0x6
DEFINE_GUIDSTRUCT("4351D676-A60D-40e5-A4E2-1DECE0B17706", KSDATAFORMAT_SUBTYPE_ULTRASOUND_VIRTCONVEX);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_VIRTCONVEX DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_VIRTCONVEX)

// identifier for B-mode 2D compound scanning media subtype
// {1A81084A-F70D-4804-88CA-9E65BA4E3CB0}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_COMPOUND \
	0x1a81084a, 0xf70d, 0x4804, 0x88, 0xca, 0x9e, 0x65, 0xba, 0x4e, 0x3c, 0xb0
DEFINE_GUIDSTRUCT("1A81084A-F70D-4804-88CA-9E65BA4E3CB0", KSDATAFORMAT_SUBTYPE_ULTRASOUND_COMPOUND);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_COMPOUND DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_COMPOUND)

// identifier for B-mode Steering scanning media subtype
// {F1661EDE-2EA2-4850-B0BD-DAF1DDDE0FA0}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_STEERING \
	0xf1661ede, 0x2ea2, 0x4850, 0xb0, 0xbd, 0xda, 0xf1, 0xdd, 0xde, 0xf, 0xa0
DEFINE_GUIDSTRUCT("F1661EDE-2EA2-4850-B0BD-DAF1DDDE0FA0", KSDATAFORMAT_SUBTYPE_ULTRASOUND_STEERING);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_STEERING DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_STEERING)

// identifier for B-mode device specific scanning media subtype
// {8C409C86-FBCC-48b7-B4BD-1392E302A7F5}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND_DEVICESPECIFIC \
	0x8c409c86, 0xfbcc, 0x48b7, 0xb4, 0xbd, 0x13, 0x92, 0xe3, 0x2, 0xa7, 0xf5
DEFINE_GUIDSTRUCT("8C409C86-FBCC-48b7-B4BD-1392E302A7F5", KSDATAFORMAT_SUBTYPE_ULTRASOUND_DEVICESPECIFIC);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND_DEVICESPECIFIC DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND_DEVICESPECIFIC)

// here we will define some new formats and data types.
// typedef USGFRAMEINFO_BMODE KS_BMODE_USGFRAMEINFO, *PKS_BMODE_USGFRAMEINFO;
typedef ULTRASOUND2D_INFOHEADER KS_ULTRASOUND2D_INFOHEADER, *PKS_ULTRASOUND2D_INFOHEADER;
typedef ULTRASOUND2D_INFO KS_ULTRASOUND2D_INFO, *PKS_ULTRASOUND2D_INFO;
typedef ULTRASOUND2D_STREAM_CONFIG_CAPS KS_ULTRASOUND2D_STREAM_CONFIG_CAPS, *PKS_ULTRASOUND2D_STREAM_CONFIG_CAPS;

// диапазон поддерживаемых разрешений для потока ультразвука в режиме B
typedef struct _KS_DATARANGE_ULTRASOUND2D
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_ULTRASOUND2D_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_ULTRASOUND2D_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_ULTRASOUND2D, *PKS_DATARANGE_ULTRASOUND2D;

typedef struct _KS_DATAFORMAT_ULTRASOUND2DINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_ULTRASOUND2D_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_ULTRASOUND2DINFOHEADER,*PKS_DATAFORMAT_ULTRASOUND2DINFOHEADER;

typedef struct _KS_DATAFORMAT_ULTRASOUND2DINFO
{
	KSDATAFORMAT DataFormat;
	KS_ULTRASOUND2D_INFO UltrasoundInfo;
} KS_DATAFORMAT_ULTRASOUND2DINFO,*PKS_DATAFORMAT_ULTRASOUND2DINFO;


#if defined(__cplusplus)
}
#endif // defined(__cplusplus)

#endif // __USGSTREAMTEMP_H__
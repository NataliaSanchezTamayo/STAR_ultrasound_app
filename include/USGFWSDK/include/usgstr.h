#ifndef _USGSTREAM_H_
#define _USGSTREAM_H_

#include "usgdata.h"
#include <ks.h>

#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)

// {941C7AC0-C559-11D0-8A2B-00A0C9255AC1}
#define STATIC_PINNAME_DEVICE_SPECIFIC \
    0x941C7AC0, 0xC559, 0x11D0, 0x8A, 0x2B, 0x0, 0xA0, 0xc9, 0x25, 0x5A, 0xC1
DEFINE_GUIDSTRUCT("941C7AC0-C559-11D0-8A2B-00A0C9255AC1", PINNAME_DEVICE_SPECIFIC);
#define PINNAME_DEVICE_SPECIFIC DEFINE_GUIDNAMED(PINNAME_DEVICE_SPECIFIC)

// 
// идентификаторы единиц измерения данных для различных форматов
// 

// {1D904B36-BC06-48c4-85A5-4F1BE1431220}
#define STATIC_GUID_Format_Code \
	0x1d904b36, 0xbc06, 0x48c4, 0x85, 0xa5, 0x4f, 0x1b, 0xe1, 0x43, 0x12, 0x20
DEFINE_GUIDSTRUCT("1D904B36-BC06-48c4-85A5-4F1BE1431220", GUID_Format_Code);
#define GUID_Format_Code DEFINE_GUIDNAMED(GUID_Format_Code)

// {F3A52845-E874-4c7e-9C72-31D7A679134F}
#define STATIC_GUID_Format_Second \
	0xf3a52845, 0xe874, 0x4c7e, 0x9c, 0x72, 0x31, 0xd7, 0xa6, 0x79, 0x13, 0x4f
DEFINE_GUIDSTRUCT("F3A52845-E874-4c7e-9C72-31D7A679134F", GUID_Format_Second);
#define GUID_Format_Second DEFINE_GUIDNAMED(GUID_Format_Second)

// {AEC662F4-9BBD-4f93-8FC4-A3A9561AE8EA}
#define STATIC_GUID_Format_Meter \
	0xaec662f4, 0x9bbd, 0x4f93, 0x8f, 0xc4, 0xa3, 0xa9, 0x56, 0x1a, 0xe8, 0xea
DEFINE_GUIDSTRUCT("AEC662F4-9BBD-4f93-8FC4-A3A9561AE8EA", GUID_Format_Meter);
#define GUID_Format_Meter DEFINE_GUIDNAMED(GUID_Format_Meter)

// {4DEDEEF9-E61C-4b51-B619-E39F6807C0C3}
#define STATIC_GUID_Format_Bell \
	0x4dedeef9, 0xe61c, 0x4b51, 0xb6, 0x19, 0xe3, 0x9f, 0x68, 0x7, 0xc0, 0xc3
DEFINE_GUIDSTRUCT("4DEDEEF9-E61C-4b51-B619-E39F6807C0C3", GUID_Format_Bell);
#define GUID_Format_Bell DEFINE_GUIDNAMED(GUID_Format_Bell)

// {8D0973C5-C98E-43b7-8189-AF2952B49A41}
#define STATIC_GUID_Format_Hertz \
	0x8d0973c5, 0xc98e, 0x43b7, 0x81, 0x89, 0xaf, 0x29, 0x52, 0xb4, 0x9a, 0x41
DEFINE_GUIDSTRUCT("8D0973C5-C98E-43b7-8189-AF2952B49A41", GUID_Fomats_Hertz);
#define GUID_Format_Hertz DEFINE_GUIDNAMED(GUID_Format_Hertz)

// {33E800B1-0165-4b5f-9711-DE597B33171C}
#define STATIC_GUID_Format_Gramm \
	0x33e800b1, 0x165, 0x4b5f, 0x97, 0x11, 0xde, 0x59, 0x7b, 0x33, 0x17, 0x1c
DEFINE_GUIDSTRUCT("33E800B1-0165-4b5f-9711-DE597B33171C", GUID_Format_Gramm);
#define GUID_Format_Gramm DEFINE_GUIDNAMED(GUID_Format_Gramm)

// {6B69E131-767E-4ccc-A406-2B0041284ACE}
#define STATIC_GUID_Format_Percent \
	0x6b69e131, 0x767e, 0x4ccc, 0xa4, 0x6, 0x2b, 0x0, 0x41, 0x28, 0x4a, 0xce
DEFINE_GUIDSTRUCT("6B69E131-767E-4ccc-A406-2B0041284ACE", GUID_Format_Percent);
#define GUID_Format_Percent DEFINE_GUIDNAMED(GUID_Format_Percent)

// {8FED29EC-4D14-4fb4-ACEC-55CEC85FB7FA}
#define STATIC_GUID_Format_Volt \
	0x8fed29ec, 0x4d14, 0x4fb4, 0xac, 0xec, 0x55, 0xce, 0xc8, 0x5f, 0xb7, 0xfa
DEFINE_GUIDSTRUCT("8FED29EC-4D14-4fb4-ACEC-55CEC85FB7FA", GUID_Format_Volt);
#define GUID_Format_Volt DEFINE_GUIDNAMED(GUID_Format_Volt)

typedef DATAFORMAT KSPROPERTY_DATA_FORMAT, *PKSPROPERTY_DATA_FORMAT;

typedef DATAFORMAT_BOUNDS KSPROPERTY_DATAFORMAT_BOUNDS, *PKSPROPERTY_DATAFORMAT_BOUNDS;

// управления форматами передачи потоковых данных

// для М-режима
// {8B12DEAE-3D1E-4e10-A562-B92EA9382BA2}
#define STATIC_KSPROPSETID_UsgMFormat \
	0x8b12deae, 0x3d1e, 0x4e10, 0xa5, 0x62, 0xb9, 0x2e, 0xa9, 0x38, 0x2b, 0xa2
DEFINE_GUIDSTRUCT("8B12DEAE-3D1E-4e10-A562-B92EA9382BA2", KSPROPSETID_UsgMFormat);
#define KSPROPSETID_UsgMFormat DEFINE_GUIDNAMED(KSPROPSETID_UsgMFormat)

enum
{
	KSPROPERTY_UsgMFormat_FormatIndex = 0,	// код текущего и количество разных форматов для М режима (сейчас 1)
	KSPROPERTY_UsgMFormat_FormatSize,		// количество байт для получения указанного формата
	KSPROPERTY_UsgMFormat_Format,			// получение и установление формата
	KSPROPERTY_UsgMFormat_FormatCaps,		// только получение возможностей формата
};

// для B-режима
// {8B090172-9C66-49ce-A69F-008B12DF1693}
#define STATIC_KSPROPSETID_UsgBFormat \
	0x8b090172, 0x9c66, 0x49ce, 0xa6, 0x9f, 0x0, 0x8b, 0x12, 0xdf, 0x16, 0x93
DEFINE_GUIDSTRUCT("8B090172-9C66-49ce-A69F-008B12DF1693", KSPROPSETID_UsgBFormat);
#define KSPROPSETID_UsgBFormat DEFINE_GUIDNAMED(KSPROPSETID_UsgBFormat)

enum
{
	KSPROPERTY_UsgBFormat_FormatIndex = 0,	// код текущего и количество разных форматов для B режима (сейчас 1)
	KSPROPERTY_UsgBFormat_FormatSize,		// количество байт для получения указанного формата
	KSPROPERTY_UsgBFormat_Format,			// получение и установление формата
	KSPROPERTY_UsgBFormat_FormatCaps,		// только получение возможностей формата
};

typedef struct
{
	KSPROPERTY property;
	ULONG focusSet;
} KSPROPERTY_FOCUS_DATA_S, *PKSPROPERTY_FOCUS_DATA_S;

typedef struct
{
	KSPROPERTY property;
	ULONG focusSet;
} KSPROPERTY_USGFOCUSDESC_S, *PKSPROPERTY_USGFOCUSDESC_S;

typedef struct
{
	ULONG FocusSetIndex;
	ULONG DescriptionSize;
	ULONG FocusesSetNum;
	ULONG Reserved;
} FOCUSES_DESC_INFO, *PFOCUSES_DESC_INFO;

#define FOCUS_MODE_MULTI	1
#define FOCUS_MODE_DYNAMIC	2
#define FOCUS_MODE_SELECTABLE	3

typedef struct
{
	ULONG TransmitMode;
	ULONG ReceiveMode;
	ULONG MinFocusNum;
	ULONG MaxFocusNum;
	ULONG Reserved1;
	ULONG Reserved2;
} FOCUS_SET_MODE, *PFOCUS_SET_MODE;

typedef struct
{
	KSPROPERTY property;
	ULONG focusSet;
} KSPROPERTY_FOCUS_MODE_S, *PKSPROPERTY_FOCUS_MODE_S;

/*
typedef struct
{
	ULONG FocusSetIndex;
	ULONG FocusesNum;
} FOCUSSET_DATA, *PFOCUSSET_DATA;
*/
//
// управление характеристиками формирователя сигналов
//

//
// TGC
//

// {DAC83A09-83F4-4f5a-9401-D556B6C40068}
#define STATIC_KSPROPSETID_UsgTGC \
	0xdac83a09, 0x83f4, 0x4f5a, 0x94, 0x1, 0xd5, 0x56, 0xb6, 0xc4, 0x0, 0x68
DEFINE_GUIDSTRUCT("DAC83A09-83F4-4f5a-9401-D556B6C40068", KSPROPSETID_UsgTGC);
#define KSPROPSETID_UsgTGC DEFINE_GUIDNAMED(KSPROPSETID_UsgTGC)

enum
{
	KSPROPERTY_UsgTGC_TgcData = 0,
	KSPROPERTY_UsgTGC_KeyData,
	KSPROPERTY_UsgTGC_KeysNum,
	KSPROPERTY_UsgTGC_DataFormat,
	KSPROPERTY_UsgTGC_KeyFormat,
	KSPROPERTY_UsgTGC_ConvertTgcFormat,
	KSPROPERTY_UsgTGC_ConvertKeyFormat,
	KSPROPERTY_UsgTGC_InterpolationType,
};

//
// GAIN
//

// {31BF165C-92A8-4e6c-8995-A51DC714AE74}
#define STATIC_KSPROPSETID_UsgGain \
	0x31bf165c, 0x92a8, 0x4e6c, 0x89, 0x95, 0xa5, 0x1d, 0xc7, 0x14, 0xae, 0x74
DEFINE_GUIDSTRUCT("31BF165C-92A8-4e6c-8995-A51DC714AE74", KSPROPSETID_UsgGain);
#define KSPROPSETID_UsgGain DEFINE_GUIDNAMED(KSPROPSETID_UsgGain)

enum
{
	KSPROPERTY_UsgGain_GainData = 0,
	KSPROPERTY_UsgGain_DataFormat,
	KSPROPERTY_UsgGain_ConvertFormat,
};

//
// POWER
// 

// {6ABA6CFB-15B8-4b7e-8AB1-0C7D2443D3FA}
#define STATIC_KSPROPSETID_UsgPower \
	0x6aba6cfb, 0x15b8, 0x4b7e, 0x8a, 0xb1, 0xc, 0x7d, 0x24, 0x43, 0xd3, 0xfa
DEFINE_GUIDSTRUCT("6ABA6CFB-15B8-4b7e-8AB1-0C7D2443D3FA", KSPROPSETID_UsgPower);
#define KSPROPSETID_UsgPower DEFINE_GUIDNAMED(KSPROPSETID_UsgPower)

enum
{
	KSPROPERTY_UsgPower_PowerData = 0,
	KSPROPERTY_UsgPower_DataFormat,
	KSPROPERTY_UsgPower_ConvertFormat,
};

//
// Dynamic Range

// {E24F3609-1167-4715-9DD4-7D15F74D62B6}
#define STATIC_KSPROPSETID_UsgDynamicRange \
	0xe24f3609, 0x1167, 0x4715, 0x9d, 0xd4, 0x7d, 0x15, 0xf7, 0x4d, 0x62, 0xb6
DEFINE_GUIDSTRUCT("E24F3609-1167-4715-9DD4-7D15F74D62B6", KSPROPSETID_UsgDynamicRange);
#define KSPROPSETID_UsgDynamicRange DEFINE_GUIDNAMED(KSPROPSETID_UsgDynamicRange)

enum
{
	KSPROPERTY_UsgDynamicRange_Data = 0,
	KSPROPERTY_UsgDynamicRange_DataFormat,
	KSPROPERTY_UsgDynamicRange_ConvertFormat,
};


//
// Focal zones
//

// {C2D17B22-A90F-459d-ADF7-882DC57B6B72}
#define STATIC_KSPROPSETID_UsgFocus \
	0xc2d17b22, 0xa90f, 0x459d, 0xad, 0xf7, 0x88, 0x2d, 0xc5, 0x7b, 0x6b, 0x72
DEFINE_GUIDSTRUCT("C2D17B22-A90F-459d-ADF7-882DC57B6B72", KSPROPSETID_UsgFocus);
#define KSPROPSETID_UsgFocus DEFINE_GUIDNAMED(KSPROPSETID_UsgFocus)

enum
{
	KSPROPERTY_UsgFocus_Focus = 0,
	KSPROPERTY_UsgFocus_FocusSet,
	KSPROPERTY_UsgFocus_Desc,
	KSPROPERTY_UsgFocus_DescFormat,
	KSPROPERTY_UsgFocus_Gain,
	KSPROPERTY_UsgFocus_GainFormat,
	KSPROPERTY_UsgFocus_FocusMode,
};

//
// KSEVENTS
//

// 
//	TGC
// 

// {682C967F-7F23-496e-92A7-DC43A9855B64}
#define STATIC_USG_KSEVENTSETID_TGCNOTIFY \
	0x682c967f, 0x7f23, 0x496e, 0x92, 0xa7, 0xdc, 0x43, 0xa9, 0x85, 0x5b, 0x64
DEFINE_GUIDSTRUCT("682C967F-7F23-496e-92A7-DC43A9855B64", USG_KSEVENTSETID_TGCNOTIFY);
#define USG_KSEVENTSETID_TGCNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_TGCNOTIFY)

enum
{
	KSEVENT_TGCNOTIFY_TGCCHANGED = 0,
	KSEVENT_TGCNOTIFY_KEYCHANGED,
	KSEVENT_TGCNOTIFY_KEYSNUMCHANGED,
	KSEVENT_TGCNOTIFY_TGCFORMATCHANGED,
	KSEVENT_TGCNOTIFY_KEYFORMATCHANGED,
};

//
// GAIN
// 

// {836C33EE-3BB9-4b6b-ACF3-ABFAEACFC8B6}
#define STATIC_USG_KSEVENTSETID_GAINNOTIFY \
	0x836c33ee, 0x3bb9, 0x4b6b, 0xac, 0xf3, 0xab, 0xfa, 0xea, 0xcf, 0xc8, 0xb6
DEFINE_GUIDSTRUCT("836C33EE-3BB9-4b6b-ACF3-ABFAEACFC8B6", USG_KSEVENTSETID_GAINNOTIFY);
#define USG_KSEVENTSETID_GAINNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_GAINNOTIFY)

enum
{
	KSEVENT_GAINNOTIFY_GAINCHANGED = 0,
	KSEVENT_GAINNOTIFY_FORMATCHANGED,
};

// 
// POWER
// 

// {08B10119-85A7-4934-873C-262CF06C4D87}
#define STATIC_USG_KSEVENTSETID_POWERNOTIFY \
	0x8b10119, 0x85a7, 0x4934, 0x87, 0x3c, 0x26, 0x2c, 0xf0, 0x6c, 0x4d, 0x87
DEFINE_GUIDSTRUCT("08B10119-85A7-4934-873C-262CF06C4D87", USG_KSEVENTSETID_POWERNOTIFY);
#define USG_KSEVENTSETID_POWERNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_POWERNOTIFY)

enum
{
	KSEVENT_POWERNOTIFY_POWERCHANGED = 0,
	KSEVENT_POWERNOTIFY_FORMATCHANGED,
};

//
//	DYNAMIC RANGE
// 

// {6CCCA293-0ECF-4775-845E-7F9098F0F055}
#define STATIC_USG_KSEVENTSETID_DYNRANGENOTIFY \
	0x6ccca293, 0xecf, 0x4775, 0x84, 0x5e, 0x7f, 0x90, 0x98, 0xf0, 0xf0, 0x55
DEFINE_GUIDSTRUCT("6CCCA293-0ECF-4775-845E-7F9098F0F055", USG_KSEVENTSETID_DYNRANGENOTIFY);
#define USG_KSEVENTSETID_DYNRANGENOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_DYNRANGENOTIFY)

enum
{
	KSEVENT_DYNRANGENOTIFY_DYNRANGECHANGED = 0,
	KSEVENT_DYNRANGENOTIFY_FORMATCHANGED,
};

// 
//	FOCAL ZONES
// 

// {C9C5CEFC-5F1B-48a1-924C-B18F8E03558C}
#define STATIC_USG_KSEVENTSETID_FOCUSNOTIFY \
	0xc9c5cefc, 0x5f1b, 0x48a1, 0x92, 0x4c, 0xb1, 0x8f, 0x8e, 0x3, 0x55, 0x8c
DEFINE_GUIDSTRUCT("C9C5CEFC-5F1B-48a1-924C-B18F8E03558C", USG_KSEVENTSETID_FOCUSNOTIFY);
#define USG_KSEVENTSETID_FOCUSNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_FOCUSNOTIFY)

enum
{
	KSEVENT_FOCUSNOTIFY_FOCUSCHANGED = 0,
	KSEVENT_FOCUSNOTIFY_FOCUSSETCHANGED,
	KSEVENT_FOCUSNOTIFY_GAINCHANGED,
	KSEVENT_FOCUSNOTIFY_GAINFORMATCHANGED,
};

//
// AGC
// 

// {FD9340C6-BC51-4cae-A358-201809140DC8}
#define STATIC_KSPROPSETID_UsgAGC \
	0xfd9340c6, 0xbc51, 0x4cae, 0xa3, 0x58, 0x20, 0x18, 0x9, 0x14, 0xd, 0xc8
DEFINE_GUIDSTRUCT("FD9340C6-BC51-4cae-A358-201809140DC8", KSPROPSETID_UsgAGC);
#define KSPROPSETID_UsgAGC DEFINE_GUIDNAMED(KSPROPSETID_UsgAGC)



enum
{
	KSPROPERTY_UsgAGC_AgcData = 0,
	KSPROPERTY_UsgAGC_KeyData,
	KSPROPERTY_UsgAGC_KeysNum,
	KSPROPERTY_UsgAGC_DataFormat,
	KSPROPERTY_UsgAGC_KeyFormat,
	KSPROPERTY_UsgAGC_ConvertAgcFormat,
	KSPROPERTY_UsgAGC_ConvertKeyFormat,
	KSPROPERTY_UsgAGC_InterpolationType,
};

//
// TFC
//

// {B5770E3E-124D-4509-8413-9AE7FFBB7DE5}
#define STATIC_KSPROPSETID_UsgTFC \
	0xb5770e3e, 0x124d, 0x4509, 0x84, 0x13, 0x9a, 0xe7, 0xff, 0xbb, 0x7d, 0xe5
DEFINE_GUIDSTRUCT("B5770E3E-124D-4509-8413-9AE7FFBB7DE5", KSPROPSETID_UsgTFC);
#define KSPROPSETID_UsgTFC DEFINE_GUIDNAMED(KSPROPSETID_UsgTFC)

enum
{
	KSPROPERTY_UsgTFC_TfcData = 0,
	KSPROPERTY_UsgTFC_KeyData,
	KSPROPERTY_UsgTFC_KeysNum,
	KSPROPERTY_UsgTFC_DataFormat,
	KSPROPERTY_UsgTFC_KeyFormat,
	KSPROPERTY_UsgTFC_ConvertTfcFormat,
	KSPROPERTY_UsgTFC_ConvertKeyFormat,
	KSPROPERTY_UsgTFC_InterpolationType,
};

//
// Pulse Duration
//

// {402E4101-5CFA-4956-B50D-347C8D829FC0}
#define STATIC_KSPROPSETID_UsgPulseDuration \
	0x402e4101, 0x5cfa, 0x4956, 0xb5, 0xd, 0x34, 0x7c, 0x8d, 0x82, 0x9f, 0xc0
DEFINE_GUIDSTRUCT("402E4101-5CFA-4956-B50D-347C8D829FC0", KSPROPSETID_UsgPulseDuration);
#define KSPROPSETID_UsgPulseDuration DEFINE_GUIDNAMED(KSPROPSETID_UsgPulseDuration)

enum
{
	KSPROPERTY_UsgPulseDuration_Data = 0,
	KSPROPERTY_UsgPulseDuration_DataFormat,
	KSPROPERTY_UsgPulseDuration_ConvertFormat,
};

//
// KSEVENTS
//

//
// AGC
//

// {2BC78551-FD3C-472b-BDBC-AACBE8D7170D}
#define STATIC_USG_KSEVENTSETID_AGCNOTIFY \
	0x2bc78551, 0xfd3c, 0x472b, 0xbd, 0xbc, 0xaa, 0xcb, 0xe8, 0xd7, 0x17, 0xd
DEFINE_GUIDSTRUCT("2BC78551-FD3C-472b-BDBC-AACBE8D7170D", USG_KSEVENTSETID_AGCNOTIFY);
#define USG_KSEVENTSETID_AGCNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_AGCNOTIFY)

enum
{
	KSEVENT_AGCNOTIFY_AGCCHANGED = 0,
	KSEVENT_AGCNOTIFY_KEYCHANGED,
	KSEVENT_AGCNOTIFY_KEYSNUMCHANGED,
	KSEVENT_AGCNOTIFY_AGCFORMATCHANGED,
	KSEVENT_AGCNOTIFY_KEYFORMATCHANGED,
};

//
// TFC
//

// {147A1A80-2B41-4bfe-B519-ED6EAE3C950F}
#define STATIC_USG_KSEVENTSETID_TFCNOTIFY \
	0x147a1a80, 0x2b41, 0x4bfe, 0xb5, 0x19, 0xed, 0x6e, 0xae, 0x3c, 0x95, 0xf
DEFINE_GUIDSTRUCT("147A1A80-2B41-4bfe-B519-ED6EAE3C950F", USG_KSEVENTSETID_TFCNOTIFY);
#define USG_KSEVENTSETID_TFCNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_TFCNOTIFY)

enum
{
	KSEVENT_TFCNOTIFY_TFCCHANGED = 0,
	KSEVENT_TFCNOTIFY_KEYCHANGED,
	KSEVENT_TFCNOTIFY_KEYSNUMCHANGED,
	KSEVENT_TFCNOTIFY_TFCFORMATCHANGED,
	KSEVENT_TFCNOTIFY_KEYFORMATCHANGED,
};

//
// PULSE DURATION
//

// {F40A3CF1-7BCC-4cee-9D46-C24DB7582033}
#define STATIC_USG_KSEVENTSETID_PDURNOTIFY \
	0xf40a3cf1, 0x7bcc, 0x4cee, 0x9d, 0x46, 0xc2, 0x4d, 0xb7, 0x58, 0x20, 0x33
DEFINE_GUIDSTRUCT("F40A3CF1-7BCC-4cee-9D46-C24DB7582033", USG_KSEVENTSETID_PDURNOTIFY);
#define USG_KSEVENTSETID_PDURNOTIFY DEFINE_GUIDNAMED(USG_KSEVENTSETID_PDURNOTIFY)

enum
{
	KSEVENT_PDURNOTIFY_PDURCHANGED = 0,
	KSEVENT_PDURNOTIFY_FORMATCHANGED,
};

//
// форматы потоковых данных
// 


// спецификаторы форматов

#define STATIC_KSDATAFORMAT_TYPE_ULTRASOUND\
    0x66677375L, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71
DEFINE_GUIDSTRUCT("66677375-0000-0010-8000-00aa00389b71", KSDATAFORMAT_TYPE_ULTRASOUND);
#define KSDATAFORMAT_TYPE_ULTRASOUND DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_ULTRASOUND)


// {D17849ED-B880-4b76-AF81-2E7F3CB0C7C6}
#define STATIC_KSDATAFORMAT_SUBTYPE_ULTRASOUND\
	0xd17849ed, 0xb880, 0x4b76, 0xaf, 0x81, 0x2e, 0x7f, 0x3c, 0xb0, 0xc7, 0xc6
DEFINE_GUIDSTRUCT("D17849ED-B880-4b76-AF81-2E7F3CB0C7C6", KSDATAFORMAT_SUBTYPE_ULTRASOUND);
#define KSDATAFORMAT_SUBTYPE_ULTRASOUND DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ULTRASOUND)


// {CCACFE6B-4A08-4d45-8C24-0899F4B176DD}
#define STATIC_KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO \
	0xccacfe6b, 0x4a08, 0x4d45, 0x8c, 0x24, 0x8, 0x99, 0xf4, 0xb1, 0x76, 0xdd
DEFINE_GUIDSTRUCT("CCACFE6B-4A08-4d45-8C24-0899F4B176DD", KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_BULTRASOUNDINFO)

// {E1680100-7016-11d7-95E4-00E07D9563F1}
#define STATIC_KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO \
	0xe1680100, 0x7016, 0x11d7, 0x95, 0xe4, 0x0, 0xe0, 0x7d, 0x95, 0x63, 0xf1
DEFINE_GUIDSTRUCT("E1680100-7016-11d7-95E4-00E07D9563F1", KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO);
#define KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_MULTRASOUNDINFO)

// {ACCA2EC1-9DA2-4765-8C9C-DD292C4BB06D}
#define STATIC_PINNAME_ULTRASOUND_MODEB \
	0xacca2ec1, 0x9da2, 0x4765, 0x8c, 0x9c, 0xdd, 0x29, 0x2c, 0x4b, 0xb0, 0x6d
DEFINE_GUIDSTRUCT("ACCA2EC1-9DA2-4765-8C9C-DD292C4BB06D", PINNAME_ULTRASOUND_MODEB);
#define PINNAME_ULTRASOUND_MODEB DEFINE_GUIDNAMED(PINNAME_ULTRASOUND_MODEB)

typedef USGFRAMEINFOHEADER KS_USGFRAMEINFOHEADER, *PKS_USGFRAMEINFOHEADER;

//
// типы данных, описывающие УЗ данные, передаваемые в В-режиме сканирования
//

typedef USGFRAMEINFO_BMODE KS_BMODE_USGFRAMEINFO, *PKS_BMODE_USGFRAMEINFO;
typedef BULTRASOUND_INFOHEADER KS_BULTRASOUND_INFOHEADER, *PKS_BULTRASOUND_INFOHEADER;
typedef BULTRASOUND_INFO KS_BULTRASOUND_INFO, *PKS_BULTRASOUND_INFO;
typedef BULTRASOUND_STREAM_CONFIG_CAPS KS_BULTRASOUND_STREAM_CONFIG_CAPS, *PKS_BULTRASOUND_STREAM_CONFIG_CAPS;

/*
typedef struct _KS_BULTRASOUND_STREAM_CONFIG_CAPS
{
	GUID guid;
	DWORD BeamsCount;					// к-во лучей в исходном кадре (192?)
	DWORD PointsCount;				// к-во точек в луче исходного кадра (2048 ?)
	DWORD MinInputBeams;				// минимальное к-во лучей, которое можно взять из исходного кадра
	DWORD MaxInputBeams;				// максимальное к-во лучей, которое можно взять из исходного кадра
	DWORD MinInputPoints;			// минимальное к-во точек одного луча, которое можно взять из исходного луча
	DWORD MaxInputPoints;			// максимальное к-во точек одного луча, которое можно взять из исходного луча (1024)
	DWORD MinPointTime;				// минимальное время на прием одной точки (количество точек в секунду)
	DWORD MaxPointTime;				// максимальное время на прием одной точки (количество точек в секунду)
	int CropBeamsGranuality;		// величина изменениея к-ва принимаемых строк
	int CropPointsGranuality;		// величина изменения к-ва принимаемых точек
	int CropPointTimeGranuality;	// величина изменения времени на точку
	int CropAlignBeam;				// выравнивание по строкам
	int CropAlignPoints;				// выравнивание по точкам
	// int CropAlignTime;				// выравнивание по частоте выборки
	DWORD MinOutputBeams;			// минимальное к-во УЗ лучей в выходном УЗ кадре
	DWORD MaxOutputBeams;			// максимальное к-во УЗ лучей в выходном УЗ кадре
	DWORD MinOutputPoints;			// минимальное к-во точек в УЗ луче выходного кадра
	DWORD MaxOutputPoints;			// максимальное к-во точек в УЗ луче выходного кадра
	int StretchTapsX;					// возможности фильтра добавлять новые лучи
	int StretchTapsY;					// возможности фильтра добавлять новые точки
	int ShrinkTapsX;					// возможности фильтра исключать "живые" лучи
	int ShrinkTapsY;					// возможности фильтра исключать "живые" точки
	LONGLONG MinFrameInterval;
	LONGLONG MaxFrameInterval;
	LONG MinBitsPerSecond;
	LONG MaxBitsPerSecond;
} KS_BULTRASOUND_STREAM_CONFIG_CAPS, *PKS_BULTRASOUND_STREAM_CONFIG_CAPS;
*/

// диапазон поддерживаемых разрешений для потока ультразвука в режиме B
typedef struct _KS_DATARANGE_BULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_BULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_BULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
	//USGBEAM_VECTOR UsgBeamVector[1];					// место для векторов лучей (может и не надо)
} KS_DATARANGE_BULTRASOUND, *PKS_DATARANGE_BULTRASOUND;

typedef struct _KS_DATAFORMAT_BULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_BULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_BULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_BULTRASOUNDINFOHEADER;

typedef struct _KS_DATAFORMAT_BULTRASOUNDINFO
{
	KSDATAFORMAT DataFormat;
	KS_BULTRASOUND_INFO UltrasoundInfo;
} KS_DATAFORMAT_BULTRASOUNDINFO,*PKS_DATAFORMAT_BULTRASOUNDINFO;

//
// типы данных, описывающие УЗ данные, передаваемые в М-режиме сканирования
//

typedef USGFRAMEINFO_MMODE KS_MMODE_USGFRAMEINFO, *PKS_MMODE_USGFRAMEINFO;
typedef MULTRASOUND_INFOHEADER KS_MULTRASOUND_INFOHEADER, *PKS_MULTRASOUND_INFOHEADER;
typedef MULTRASOUND_STREAM_CONFIG_CAPS KS_MULTRASOUND_STREAM_CONFIG_CAPS, *PKS_MULTRASOUND_STREAM_CONFIG_CAPS;

// диапазон поддерживаемых разрешений для потока ультразвука в режиме B
typedef struct _KS_DATARANGE_MULTRASOUND
{
	KSDATARANGE DataRange;
	BOOL bFixedSizeSample;
	KS_MULTRASOUND_STREAM_CONFIG_CAPS ConfigCaps;		// capabilities
	KS_MULTRASOUND_INFOHEADER UltrasoundInfoHeader;		// default format
} KS_DATARANGE_MULTRASOUND, *PKS_DATARANGE_MULTRASOUND;

typedef struct _KS_DATAFORMAT_MULTRASOUNDINFOHEADER
{
	KSDATAFORMAT DataFormat;
	KS_MULTRASOUND_INFOHEADER UltrasoundInfoHeader;
} KS_DATAFORMAT_MULTRASOUNDINFOHEADER,*PKS_DATAFORMAT_MULTRASOUNDINFOHEADER;

//
// EchoBlaster 128 connectors

// {EB699AA3-81C8-4fe0-B027-D38129B88229}
#define STATIC_KSPROPSETID_UsgConnectors \
	0xeb699aa3, 0x81c8, 0x4fe0, 0xb0, 0x27, 0xd3, 0x81, 0x29, 0xb8, 0x82, 0x29
DEFINE_GUIDSTRUCT("EB699AA3-81C8-4fe0-B027-D38129B88229", KSPROPSETID_UsgConnectors);
#define KSPROPSETID_UsgConnectors DEFINE_GUIDNAMED(KSPROPSETID_UsgConnectors)

enum
{
	KSPROPERTY_ActiveConnector = 0
};


//
// Frequency

// {61D7F3B5-3F5A-4b9c-95BD-24262CB7A2CE}
#define STATIC_KSPROPSETID_Frequency \
	0x61d7f3b5, 0x3f5a, 0x4b9c, 0x95, 0xbd, 0x24, 0x26, 0x2c, 0xb7, 0xa2, 0xce
DEFINE_GUIDSTRUCT("61D7F3B5-3F5A-4b9c-95BD-24262CB7A2CE", KSPROPSETID_Frequency);
#define KSPROPSETID_Frequency DEFINE_GUIDNAMED(KSPROPSETID_Frequency)

enum
{
	KSPROPERTY_Frequency_Data = 0,
	KSPROPERTY_Frequency_DataFormat,
	KSPROPERTY_Frequency_ConvertFormat,
};


//
// Misc DevMode (TestMode)

// {D1998413-4C14-4d8a-8498-DD57F98AA9B6}
#define STATIC_KSPROPSETID_MiscDevMode \
	0xd1998413, 0x4c14, 0x4d8a, 0x84, 0x98, 0xdd, 0x57, 0xf9, 0x8a, 0xa9, 0xb6
DEFINE_GUIDSTRUCT("D1998413-4C14-4d8a-8498-DD57F98AA9B6", KSPROPSETID_MiscDevMode);
#define KSPROPSETID_MiscDevMode DEFINE_GUIDNAMED(KSPROPSETID_MiscDevMode)

enum
{
	KSPROPERTY_TESTMODE = 0,
};

enum
{
	TESTMODE_OFF = 0,
	TESTMODE_ADCTEST
};


#if defined(__cplusplus)
}
#endif // defined(__cplusplus)

#endif	// _USGSTREAM_H_